
out.clang/triceExamples.o:     file format elf32-littlearm


Disassembly of section .text.TriceHeadLine:

00000000 <TriceHeadLine>:
*******************************************************************************/

#include "trice.h"

//! TriceHeadLine emits a decorated name. The name length should be 18 characters.
void TriceHeadLine(char* name) {
   0:	b580      	push	{r7, lr}
   2:	af00      	add	r7, sp, #0
   4:	4602      	mov	r2, r0
   6:	4802      	ldr	r0, [pc, #8]	@ (10 <TriceHeadLine+0x10>)
	//! This is usable as the very first trice sequence after restart. Adapt it. Use a UTF-8 capable editor like VS-Code or use pure ASCII.
	TriceS("w: Hello! 👋🙂\n\n        ✨✨✨✨✨✨✨✨✨✨✨✨✨✨✨✨✨        \n        🎈🎈🎈🎈%s🎈🎈🎈🎈\n        🍃🍃🍃🍃🍃🍃🍃🍃🍃🍃🍃🍃🍃🍃🍃🍃🍃        \n\n\n", name);
   8:	4902      	ldr	r1, [pc, #8]	@ (14 <TriceHeadLine+0x14>)
   a:	f7ff fffe 	bl	0 <TriceS>
}
   e:	bd80      	pop	{r7, pc}
  10:	00003ff1 	strdeq	r3, [r0], -r1
  14:	00000000 	andeq	r0, r0, r0

Disassembly of section .ARM.exidx.text.TriceHeadLine:

00000000 <.ARM.exidx.text.TriceHeadLine>:
   0:	00000000 	andeq	r0, r0, r0
   4:	00000001 	andeq	r0, r0, r1

Disassembly of section .text.SomeExampleTrices:

00000000 <SomeExampleTrices>:

//! SomeExampleTrices generates a few Trice example logs and a burst of Trices.
void SomeExampleTrices(int burstCount) {
   0:	b5f0      	push	{r4, r5, r6, r7, lr}
   2:	af03      	add	r7, sp, #12
   4:	b083      	sub	sp, #12
   6:	4604      	mov	r4, r0
	TRICE(ID(0), "att:🐁 Speedy Gonzales A  32-bit time stamp\n");
   8:	f7ff fffe 	bl	0 <HAL_GetTick>
   c:	4a7e      	ldr	r2, [pc, #504]	@ (208 <SomeExampleTrices+0x208>)
   e:	6811      	ldr	r1, [r2, #0]
  10:	4613      	mov	r3, r2
  12:	25c0      	movs	r5, #192	@ 0xc0
  14:	80cd      	strh	r5, [r1, #6]
  16:	0c02      	lsrs	r2, r0, #16
  18:	808a      	strh	r2, [r1, #4]
  1a:	8048      	strh	r0, [r1, #2]
  1c:	2012      	movs	r0, #18
  1e:	43c6      	mvns	r6, r0
  20:	1cf0      	adds	r0, r6, #3
  22:	8008      	strh	r0, [r1, #0]
  24:	3108      	adds	r1, #8
  26:	6019      	str	r1, [r3, #0]
	TRICE(ID(0), "att:🐁 Speedy Gonzales B  32-bit time stamp\n");
  28:	f7ff fffe 	bl	0 <HAL_GetTick>
  2c:	4b76      	ldr	r3, [pc, #472]	@ (208 <SomeExampleTrices+0x208>)
  2e:	6819      	ldr	r1, [r3, #0]
  30:	80cd      	strh	r5, [r1, #6]
  32:	0c02      	lsrs	r2, r0, #16
  34:	808a      	strh	r2, [r1, #4]
  36:	8048      	strh	r0, [r1, #2]
  38:	1cb0      	adds	r0, r6, #2
  3a:	8008      	strh	r0, [r1, #0]
  3c:	3108      	adds	r1, #8
  3e:	6019      	str	r1, [r3, #0]
	TRICE(ID(0), "att:🐁 Speedy Gonzales C  32-bit time stamp\n");
  40:	f7ff fffe 	bl	0 <HAL_GetTick>
  44:	4b70      	ldr	r3, [pc, #448]	@ (208 <SomeExampleTrices+0x208>)
  46:	6819      	ldr	r1, [r3, #0]
  48:	80cd      	strh	r5, [r1, #6]
  4a:	0c02      	lsrs	r2, r0, #16
  4c:	808a      	strh	r2, [r1, #4]
  4e:	8048      	strh	r0, [r1, #2]
  50:	1c70      	adds	r0, r6, #1
  52:	8008      	strh	r0, [r1, #0]
  54:	3108      	adds	r1, #8
  56:	6019      	str	r1, [r3, #0]
	TRICE(ID(0), "att:🐁 Speedy Gonzales D  32-bit time stamp\n");
  58:	f7ff fffe 	bl	0 <HAL_GetTick>
  5c:	4a6b      	ldr	r2, [pc, #428]	@ (20c <SomeExampleTrices+0x20c>)
	TRICE(Id(0), "att:🐁 Speedy Gonzales E  16-bit time stamp\n");
  5e:	6811      	ldr	r1, [r2, #0]
	TRICE(ID(0), "att:🐁 Speedy Gonzales D  32-bit time stamp\n");
  60:	9102      	str	r1, [sp, #8]
  62:	4969      	ldr	r1, [pc, #420]	@ (208 <SomeExampleTrices+0x208>)
  64:	6809      	ldr	r1, [r1, #0]
  66:	4b6a      	ldr	r3, [pc, #424]	@ (210 <SomeExampleTrices+0x210>)
	TRICE(Id(0), "att:🐁 Speedy Gonzales E  16-bit time stamp\n");
  68:	608b      	str	r3, [r1, #8]
  6a:	4613      	mov	r3, r2
	TRICE(Id(0), "att:🐁 Speedy Gonzales F  16-bit time stamp\n");
  6c:	6812      	ldr	r2, [r2, #0]
  6e:	9201      	str	r2, [sp, #4]
  70:	4a68      	ldr	r2, [pc, #416]	@ (214 <SomeExampleTrices+0x214>)
  72:	610a      	str	r2, [r1, #16]
	TRICE(Id(0), "att:🐁 Speedy Gonzales G  16-bit time stamp\n");
  74:	681a      	ldr	r2, [r3, #0]
  76:	4b68      	ldr	r3, [pc, #416]	@ (218 <SomeExampleTrices+0x218>)
  78:	618b      	str	r3, [r1, #24]
	TRICE(ID(0), "att:🐁 Speedy Gonzales D  32-bit time stamp\n");
  7a:	80cd      	strh	r5, [r1, #6]
  7c:	0c03      	lsrs	r3, r0, #16
  7e:	808b      	strh	r3, [r1, #4]
  80:	8048      	strh	r0, [r1, #2]
  82:	800e      	strh	r6, [r1, #0]
	TRICE(Id(0), "att:🐁 Speedy Gonzales E  16-bit time stamp\n");
  84:	81cd      	strh	r5, [r1, #14]
  86:	9802      	ldr	r0, [sp, #8]
  88:	8188      	strh	r0, [r1, #12]
	TRICE(Id(0), "att:🐁 Speedy Gonzales F  16-bit time stamp\n");
  8a:	82cd      	strh	r5, [r1, #22]
	TRICE(Id(0), "att:🐁 Speedy Gonzales G  16-bit time stamp\n");
  8c:	83cd      	strh	r5, [r1, #30]
	TRICE(Id(0), "att:🐁 Speedy Gonzales F  16-bit time stamp\n");
  8e:	9801      	ldr	r0, [sp, #4]
  90:	8288      	strh	r0, [r1, #20]
	TRICE(Id(0), "att:🐁 Speedy Gonzales G  16-bit time stamp\n");
  92:	838a      	strh	r2, [r1, #28]
	TRICE(Id(0), "att:🐁 Speedy Gonzales H  16-bit time stamp\n");
  94:	485d      	ldr	r0, [pc, #372]	@ (20c <SomeExampleTrices+0x20c>)
  96:	6800      	ldr	r0, [r0, #0]
  98:	4a60      	ldr	r2, [pc, #384]	@ (21c <SomeExampleTrices+0x21c>)
  9a:	620a      	str	r2, [r1, #32]
	TRICE(id(0), "att:🐁 Speedy Gonzales I without time stamp\n");
	TRICE(id(0), "att:🐁 Speedy Gonzales J without time stamp\n");
	TRICE(id(0), "att:🐁 Speedy Gonzales K without time stamp\n");
	TRICE(id(0), "att:🐁 Speedy Gonzales L without time stamp\n");
  9c:	86cd      	strh	r5, [r1, #54]	@ 0x36
  9e:	4a60      	ldr	r2, [pc, #384]	@ (220 <SomeExampleTrices+0x220>)
  a0:	868a      	strh	r2, [r1, #52]	@ 0x34
	TRICE(id(0), "att:🐁 Speedy Gonzales K without time stamp\n");
  a2:	864d      	strh	r5, [r1, #50]	@ 0x32
  a4:	1c53      	adds	r3, r2, #1
  a6:	860b      	strh	r3, [r1, #48]	@ 0x30
	TRICE(id(0), "att:🐁 Speedy Gonzales J without time stamp\n");
  a8:	85cd      	strh	r5, [r1, #46]	@ 0x2e
  aa:	1c93      	adds	r3, r2, #2
  ac:	858b      	strh	r3, [r1, #44]	@ 0x2c
	TRICE(id(0), "att:🐁 Speedy Gonzales I without time stamp\n");
  ae:	854d      	strh	r5, [r1, #42]	@ 0x2a
  b0:	1cd2      	adds	r2, r2, #3
  b2:	850a      	strh	r2, [r1, #40]	@ 0x28
	TRICE(Id(0), "att:🐁 Speedy Gonzales H  16-bit time stamp\n");
  b4:	84cd      	strh	r5, [r1, #38]	@ 0x26
  b6:	8488      	strh	r0, [r1, #36]	@ 0x24
	TRICE(id(0), "att:🐁 Speedy Gonzales L without time stamp\n");
  b8:	3138      	adds	r1, #56	@ 0x38
  ba:	4d53      	ldr	r5, [pc, #332]	@ (208 <SomeExampleTrices+0x208>)
  bc:	6029      	str	r1, [r5, #0]
	Trice32m_0(tid);
	TRICE_UNUSED(pFmt)
}

TRICE_INLINE void TRice0(uint16_t tid, const char* pFmt) {
	TRice32m_0(tid);
  be:	f7ff fffe 	bl	0 <HAL_GetTick>
  c2:	6829      	ldr	r1, [r5, #0]
  c4:	460a      	mov	r2, r1
  c6:	3208      	adds	r2, #8
  c8:	602a      	str	r2, [r5, #0]
  ca:	2203      	movs	r2, #3
  cc:	0595      	lsls	r5, r2, #22
  ce:	0c02      	lsrs	r2, r0, #16
  d0:	1952      	adds	r2, r2, r5
  d2:	0400      	lsls	r0, r0, #16
  d4:	4e53      	ldr	r6, [pc, #332]	@ (224 <SomeExampleTrices+0x224>)
  d6:	1980      	adds	r0, r0, r6
  d8:	1cc0      	adds	r0, r0, #3
  da:	c105      	stmia	r1!, {r0, r2}
  dc:	f7ff fffe 	bl	0 <HAL_GetTick>
  e0:	4b49      	ldr	r3, [pc, #292]	@ (208 <SomeExampleTrices+0x208>)
  e2:	6819      	ldr	r1, [r3, #0]
  e4:	460a      	mov	r2, r1
  e6:	3208      	adds	r2, #8
  e8:	601a      	str	r2, [r3, #0]
  ea:	0c02      	lsrs	r2, r0, #16
  ec:	1952      	adds	r2, r2, r5
  ee:	0400      	lsls	r0, r0, #16
  f0:	1980      	adds	r0, r0, r6
  f2:	1c80      	adds	r0, r0, #2
  f4:	c105      	stmia	r1!, {r0, r2}
  f6:	f7ff fffe 	bl	0 <HAL_GetTick>
  fa:	4e43      	ldr	r6, [pc, #268]	@ (208 <SomeExampleTrices+0x208>)
  fc:	6831      	ldr	r1, [r6, #0]
  fe:	460a      	mov	r2, r1
 100:	3208      	adds	r2, #8
 102:	6032      	str	r2, [r6, #0]
 104:	0c02      	lsrs	r2, r0, #16
 106:	1952      	adds	r2, r2, r5
 108:	0400      	lsls	r0, r0, #16
 10a:	4b46      	ldr	r3, [pc, #280]	@ (224 <SomeExampleTrices+0x224>)
 10c:	18c0      	adds	r0, r0, r3
 10e:	1c40      	adds	r0, r0, #1
 110:	c105      	stmia	r1!, {r0, r2}
 112:	f7ff fffe 	bl	0 <HAL_GetTick>
 116:	0c01      	lsrs	r1, r0, #16
 118:	194a      	adds	r2, r1, r5
 11a:	6831      	ldr	r1, [r6, #0]
 11c:	604a      	str	r2, [r1, #4]
 11e:	0400      	lsls	r0, r0, #16
 120:	4a40      	ldr	r2, [pc, #256]	@ (224 <SomeExampleTrices+0x224>)
 122:	1880      	adds	r0, r0, r2
 124:	6008      	str	r0, [r1, #0]
 126:	4b39      	ldr	r3, [pc, #228]	@ (20c <SomeExampleTrices+0x20c>)
	Trice32m_0(tid);
 128:	6818      	ldr	r0, [r3, #0]
 12a:	4a3f      	ldr	r2, [pc, #252]	@ (228 <SomeExampleTrices+0x228>)
 12c:	608a      	str	r2, [r1, #8]
 12e:	b280      	uxth	r0, r0
 130:	1940      	adds	r0, r0, r5
 132:	60c8      	str	r0, [r1, #12]
 134:	6818      	ldr	r0, [r3, #0]
 136:	4a3d      	ldr	r2, [pc, #244]	@ (22c <SomeExampleTrices+0x22c>)
 138:	610a      	str	r2, [r1, #16]
 13a:	b280      	uxth	r0, r0
 13c:	1940      	adds	r0, r0, r5
 13e:	6148      	str	r0, [r1, #20]
 140:	6818      	ldr	r0, [r3, #0]
 142:	4a3b      	ldr	r2, [pc, #236]	@ (230 <SomeExampleTrices+0x230>)
 144:	618a      	str	r2, [r1, #24]
 146:	b280      	uxth	r0, r0
 148:	1940      	adds	r0, r0, r5
 14a:	61c8      	str	r0, [r1, #28]
	trice32m_0(tid);
 14c:	4608      	mov	r0, r1
 14e:	3038      	adds	r0, #56	@ 0x38
 150:	6030      	str	r0, [r6, #0]
	Trice32m_0(tid);
 152:	6818      	ldr	r0, [r3, #0]
 154:	4b38      	ldr	r3, [pc, #224]	@ (238 <SomeExampleTrices+0x238>)
	trice32m_0(tid);
 156:	1cde      	adds	r6, r3, #3
 158:	1c9a      	adds	r2, r3, #2
 15a:	9202      	str	r2, [sp, #8]
 15c:	1c5a      	adds	r2, r3, #1
	Trice32m_0(tid);
 15e:	9201      	str	r2, [sp, #4]
 160:	b280      	uxth	r0, r0
 162:	1940      	adds	r0, r0, r5
 164:	4a33      	ldr	r2, [pc, #204]	@ (234 <SomeExampleTrices+0x234>)
 166:	620a      	str	r2, [r1, #32]
 168:	6248      	str	r0, [r1, #36]	@ 0x24
	trice32m_0(tid);
 16a:	628e      	str	r6, [r1, #40]	@ 0x28
 16c:	9802      	ldr	r0, [sp, #8]
 16e:	62c8      	str	r0, [r1, #44]	@ 0x2c
 170:	9801      	ldr	r0, [sp, #4]
 172:	6308      	str	r0, [r1, #48]	@ 0x30
 174:	634b      	str	r3, [r1, #52]	@ 0x34
 176:	4831      	ldr	r0, [pc, #196]	@ (23c <SomeExampleTrices+0x23c>)
	trice("att:🐁 Speedy Gonzales i without time stamp\n");
	trice("att:🐁 Speedy Gonzales j without time stamp\n");
	trice("att:🐁 Speedy Gonzales k without time stamp\n");
	trice("att:🐁 Speedy Gonzales l without time stamp\n");
	char* aString = "2.71828182845904523536";
	TriceS("rd:%s <- float number as string\n", aString);
 178:	1dc0      	adds	r0, r0, #7
 17a:	4931      	ldr	r1, [pc, #196]	@ (240 <SomeExampleTrices+0x240>)
 17c:	4a31      	ldr	r2, [pc, #196]	@ (244 <SomeExampleTrices+0x244>)
 17e:	f7ff fffe 	bl	0 <TriceS>
 182:	4e31      	ldr	r6, [pc, #196]	@ (248 <SomeExampleTrices+0x248>)
	Trice64("msg:%.20f (double with more ciphers than precision)\n", aDouble(2.71828182845904523536));
 184:	4630      	mov	r0, r6
 186:	3008      	adds	r0, #8
 188:	4a30      	ldr	r2, [pc, #192]	@ (24c <SomeExampleTrices+0x24c>)
 18a:	4b31      	ldr	r3, [pc, #196]	@ (250 <SomeExampleTrices+0x250>)
 18c:	f7ff fffe 	bl	0 <Trice64fn_1>
	Trice("msg:%.20f (float  with more ciphers than precision)\n", aFloat(2.71828182845904523536));
 190:	1df0      	adds	r0, r6, #7
 192:	4930      	ldr	r1, [pc, #192]	@ (254 <SomeExampleTrices+0x254>)
 194:	f7ff fffe 	bl	0 <Trice32fn_1>
	Trice("msg:%f (default rounded float)\n", aFloat(2.71828182845904523536));
 198:	1db0      	adds	r0, r6, #6
 19a:	492e      	ldr	r1, [pc, #184]	@ (254 <SomeExampleTrices+0x254>)
 19c:	f7ff fffe 	bl	0 <Trice32fn_1>
	Trice32m_0(tid);
 1a0:	481a      	ldr	r0, [pc, #104]	@ (20c <SomeExampleTrices+0x20c>)
 1a2:	6800      	ldr	r0, [r0, #0]
 1a4:	4b18      	ldr	r3, [pc, #96]	@ (208 <SomeExampleTrices+0x208>)
 1a6:	6819      	ldr	r1, [r3, #0]
 1a8:	4a2b      	ldr	r2, [pc, #172]	@ (258 <SomeExampleTrices+0x258>)
 1aa:	600a      	str	r2, [r1, #0]
 1ac:	460a      	mov	r2, r1
 1ae:	3208      	adds	r2, #8
 1b0:	601a      	str	r2, [r3, #0]
 1b2:	b280      	uxth	r0, r0
 1b4:	1940      	adds	r0, r0, r5
 1b6:	6048      	str	r0, [r1, #4]
 1b8:	4e20      	ldr	r6, [pc, #128]	@ (23c <SomeExampleTrices+0x23c>)
	Trice("info:A Buffer:\n");
	Trice8B("msg:%02x \n", aString, strlen(aString));
 1ba:	1cb0      	adds	r0, r6, #2
 1bc:	4927      	ldr	r1, [pc, #156]	@ (25c <SomeExampleTrices+0x25c>)
 1be:	2316      	movs	r3, #22
 1c0:	4d20      	ldr	r5, [pc, #128]	@ (244 <SomeExampleTrices+0x244>)
 1c2:	462a      	mov	r2, r5
 1c4:	f7ff fffe 	bl	0 <Trice8B>
	Trice32B("msg:%08x  \n", aString, strlen(aString) >> 2);
 1c8:	1c70      	adds	r0, r6, #1
 1ca:	4925      	ldr	r1, [pc, #148]	@ (260 <SomeExampleTrices+0x260>)
 1cc:	2305      	movs	r3, #5
 1ce:	462a      	mov	r2, r5
 1d0:	f7ff fffe 	bl	0 <Trice32B>
	Trice16F("att:ARemoteFunctionName", aString, strlen(aString) >> 1);
 1d4:	4923      	ldr	r1, [pc, #140]	@ (264 <SomeExampleTrices+0x264>)
 1d6:	230b      	movs	r3, #11
 1d8:	4630      	mov	r0, r6
 1da:	462a      	mov	r2, r5
 1dc:	f7ff fffe 	bl	0 <Trice16F>
	trice("info:%d times a 16 byte long Trice messages, which not all will be written because of the TRICE_PROTECT:\n", burstCount);
 1e0:	4819      	ldr	r0, [pc, #100]	@ (248 <SomeExampleTrices+0x248>)
 1e2:	1c40      	adds	r0, r0, #1
 1e4:	4621      	mov	r1, r4
 1e6:	f7ff fffe 	bl	0 <trice32fn_1>
	for (int i = 0; i < burstCount; i++) {
 1ea:	2c01      	cmp	r4, #1
 1ec:	db0a      	blt.n	204 <SomeExampleTrices+0x204>
 1ee:	4e1e      	ldr	r6, [pc, #120]	@ (268 <SomeExampleTrices+0x268>)
 1f0:	4d1e      	ldr	r5, [pc, #120]	@ (26c <SomeExampleTrices+0x26c>)
		Trice("i=%x %x\n", 0x44444400 + i, 0xaaaaaa00 + i);
 1f2:	4815      	ldr	r0, [pc, #84]	@ (248 <SomeExampleTrices+0x248>)
 1f4:	4629      	mov	r1, r5
 1f6:	4632      	mov	r2, r6
 1f8:	f7ff fffe 	bl	0 <Trice32fn_2>
	for (int i = 0; i < burstCount; i++) {
 1fc:	1c6d      	adds	r5, r5, #1
 1fe:	1c76      	adds	r6, r6, #1
 200:	1e64      	subs	r4, r4, #1
 202:	d1f6      	bne.n	1f2 <SomeExampleTrices+0x1f2>
	}
}
 204:	b003      	add	sp, #12
 206:	bdf0      	pop	{r4, r5, r6, r7, pc}
 208:	00000000 	andeq	r0, r0, r0
 20c:	40014824 	andmi	r4, r1, r4, lsr #16
 210:	bfecbfec 	svclt	0x00ecbfec
 214:	bfebbfeb 	svclt	0x00ebbfeb
 218:	bfeabfea 	svclt	0x00eabfea
 21c:	bfe9bfe9 	svclt	0x00e9bfe9
 220:	00007fe5 	andeq	r7, r0, r5, ror #31
 224:	0000ffe1 	andeq	pc, r0, r1, ror #31
 228:	bfe0bfe0 	svclt	0x00e0bfe0
 22c:	bfdfbfdf 	svclt	0x00dfbfdf
 230:	bfdebfde 	svclt	0x00debfde
 234:	bfddbfdd 	svclt	0x00ddbfdd
 238:	00c07fd9 	ldrdeq	r7, [r0], #249	@ 0xf9
 23c:	00003fd1 	ldrdeq	r3, [r0], -r1
 240:	000000f2 	strdeq	r0, [r0], -r2
 244:	000000db 	ldrdeq	r0, [r0], -fp
 248:	00003fcf 	andeq	r3, r0, pc, asr #31
 24c:	8b145769 	blhi	515ff8 <SomeExampleTrices+0x515ff8>
 250:	4005bf0a 	andmi	fp, r5, sl, lsl #30
 254:	402df854 	eormi	pc, sp, r4, asr r8	@ <UNPREDICTABLE>
 258:	bfd4bfd4 	svclt	0x00d4bfd4
 25c:	00000113 	andeq	r0, r0, r3, lsl r1
 260:	0000011e 	andeq	r0, r0, lr, lsl r1
 264:	0000012a 	andeq	r0, r0, sl, lsr #2
 268:	aaaaaa00 	bge	feaaaa70 <SomeExampleTrices+0xfeaaaa70>
 26c:	44444400 	strbmi	r4, [r4], #-1024	@ 0xfffffc00

Disassembly of section .ARM.exidx.text.SomeExampleTrices:

00000000 <.ARM.exidx.text.SomeExampleTrices>:
   0:	00000000 	andeq	r0, r0, r0
   4:	00000001 	andeq	r0, r0, r1

Disassembly of section .text.LogTriceConfiguration:

00000000 <LogTriceConfiguration>:

//! LogTriceConfiguration shows a few configuration settings.
void LogTriceConfiguration(void) {
   0:	b5f0      	push	{r4, r5, r6, r7, lr}
   2:	af03      	add	r7, sp, #12
   4:	b081      	sub	sp, #4
   6:	4c10      	ldr	r4, [pc, #64]	@ (48 <LogTriceConfiguration+0x48>)
#ifdef LogConfigInfo
	LogConfigInfo();
#endif
	trice("deb:TRICE_DIRECT_OUTPUT == %d, TRICE_DEFERRED_OUTPUT == %d\n", TRICE_DIRECT_OUTPUT, TRICE_DEFERRED_OUTPUT);
   8:	4620      	mov	r0, r4
   a:	3008      	adds	r0, #8
   c:	2600      	movs	r6, #0
   e:	2501      	movs	r5, #1
  10:	4631      	mov	r1, r6
  12:	462a      	mov	r2, r5
  14:	f7ff fffe 	bl	0 <trice32fn_2>
  18:	480c      	ldr	r0, [pc, #48]	@ (4c <LogTriceConfiguration+0x4c>)
	trice32m_0(tid);
  1a:	1cc1      	adds	r1, r0, #3
  1c:	4a0c      	ldr	r2, [pc, #48]	@ (50 <LogTriceConfiguration+0x50>)
  1e:	6813      	ldr	r3, [r2, #0]
  20:	6019      	str	r1, [r3, #0]
  22:	6058      	str	r0, [r3, #4]
  24:	3308      	adds	r3, #8
  26:	6013      	str	r3, [r2, #0]
#if TRICE_DEFERRED_TRANSFER_MODE == TRICE_SINGLE_PACK_MODE
	trice("deb:TRICE_SINGLE_PACK_MODE\n");
#else
	trice("deb:TRICE_MULTI_PACK_MODE\n");
#endif
	trice("deb:_CYCLE == %d, _PROTECT == %d, _DIAG == %d, XTEA == %d\n", TRICE_CYCLE_COUNTER, TRICE_PROTECT, TRICE_DIAGNOSTICS, TRICE_DEFERRED_XTEA_ENCRYPT);
  28:	9600      	str	r6, [sp, #0]
  2a:	1c60      	adds	r0, r4, #1
  2c:	4631      	mov	r1, r6
  2e:	4632      	mov	r2, r6
  30:	4633      	mov	r3, r6
  32:	f7ff fffe 	bl	0 <trice32fn_4>
  36:	02ab      	lsls	r3, r5, #10
  38:	2168      	movs	r1, #104	@ 0x68
  3a:	22ac      	movs	r2, #172	@ 0xac
	trice("d:_SINGLE_MAX_SIZE=%d, _BUFFER_SIZE=%d, _DEFERRED_BUFFER_SIZE=%d\n", TRICE_SINGLE_MAX_SIZE, TRICE_BUFFER_SIZE, TRICE_DEFERRED_BUFFER_SIZE);
  3c:	4620      	mov	r0, r4
  3e:	f7ff fffe 	bl	0 <trice32fn_3>
  42:	b001      	add	sp, #4
  44:	bdf0      	pop	{r4, r5, r6, r7, pc}
  46:	46c0      	nop			@ (mov r8, r8)
  48:	00003fc6 	andeq	r3, r0, r6, asr #31
  4c:	00c07fc8 	sbceq	r7, r0, r8, asr #31
  50:	00000000 	andeq	r0, r0, r0

Disassembly of section .ARM.exidx.text.LogTriceConfiguration:

00000000 <.ARM.exidx.text.LogTriceConfiguration>:
   0:	00000000 	andeq	r0, r0, r0
   4:	00000001 	andeq	r0, r0, r1

Disassembly of section .rodata.str1.1:

00000000 <.rodata.str1.1>:
   0:	48203a77 	stmdami	r0!, {r0, r1, r2, r4, r5, r6, r9, fp, ip, sp}
   4:	6f6c6c65 	svcvs	0x006c6c65
   8:	9ff02021 	svcls	0x00f02021
   c:	9ff08b91 	svcls	0x00f08b91
  10:	0a0a8299 	beq	2a0a7c <SomeExampleTrices+0x2a0a7c>
  14:	20202020 	eorcs	r2, r0, r0, lsr #32
  18:	20202020 	eorcs	r2, r0, r0, lsr #32
  1c:	e2a89ce2 	adc	r9, r8, #57856	@ 0xe200
  20:	9ce2a89c 	stclls	8, cr10, [r2], #624	@ 0x270
  24:	a89ce2a8 	ldmge	ip, {r3, r5, r7, r9, sp, lr, pc}
  28:	e2a89ce2 	adc	r9, r8, #57856	@ 0xe200
  2c:	9ce2a89c 	stclls	8, cr10, [r2], #624	@ 0x270
  30:	a89ce2a8 	ldmge	ip, {r3, r5, r7, r9, sp, lr, pc}
  34:	e2a89ce2 	adc	r9, r8, #57856	@ 0xe200
  38:	9ce2a89c 	stclls	8, cr10, [r2], #624	@ 0x270
  3c:	a89ce2a8 	ldmge	ip, {r3, r5, r7, r9, sp, lr, pc}
  40:	e2a89ce2 	adc	r9, r8, #57856	@ 0xe200
  44:	9ce2a89c 	stclls	8, cr10, [r2], #624	@ 0x270
  48:	a89ce2a8 	ldmge	ip, {r3, r5, r7, r9, sp, lr, pc}
  4c:	20a89ce2 	adccs	r9, r8, r2, ror #25
  50:	20202020 	eorcs	r2, r0, r0, lsr #32
  54:	0a202020 	beq	8080dc <SomeExampleTrices+0x8080dc>
  58:	20202020 	eorcs	r2, r0, r0, lsr #32
  5c:	20202020 	eorcs	r2, r0, r0, lsr #32
  60:	888e9ff0 	stmhi	lr, {r4, r5, r6, r7, r8, r9, sl, fp, ip, pc}
  64:	888e9ff0 	stmhi	lr, {r4, r5, r6, r7, r8, r9, sl, fp, ip, pc}
  68:	888e9ff0 	stmhi	lr, {r4, r5, r6, r7, r8, r9, sl, fp, ip, pc}
  6c:	888e9ff0 	stmhi	lr, {r4, r5, r6, r7, r8, r9, sl, fp, ip, pc}
  70:	9ff07325 	svcls	0x00f07325
  74:	9ff0888e 	svcls	0x00f0888e
  78:	9ff0888e 	svcls	0x00f0888e
  7c:	9ff0888e 	svcls	0x00f0888e
  80:	200a888e 	andcs	r8, sl, lr, lsl #17
  84:	20202020 	eorcs	r2, r0, r0, lsr #32
  88:	f0202020 			@ <UNDEFINED> instruction: 0xf0202020
  8c:	f0838d9f 			@ <UNDEFINED> instruction: 0xf0838d9f
  90:	f0838d9f 			@ <UNDEFINED> instruction: 0xf0838d9f
  94:	f0838d9f 			@ <UNDEFINED> instruction: 0xf0838d9f
  98:	f0838d9f 			@ <UNDEFINED> instruction: 0xf0838d9f
  9c:	f0838d9f 			@ <UNDEFINED> instruction: 0xf0838d9f
  a0:	f0838d9f 			@ <UNDEFINED> instruction: 0xf0838d9f
  a4:	f0838d9f 			@ <UNDEFINED> instruction: 0xf0838d9f
  a8:	f0838d9f 			@ <UNDEFINED> instruction: 0xf0838d9f
  ac:	f0838d9f 			@ <UNDEFINED> instruction: 0xf0838d9f
  b0:	f0838d9f 			@ <UNDEFINED> instruction: 0xf0838d9f
  b4:	f0838d9f 			@ <UNDEFINED> instruction: 0xf0838d9f
  b8:	f0838d9f 			@ <UNDEFINED> instruction: 0xf0838d9f
  bc:	f0838d9f 			@ <UNDEFINED> instruction: 0xf0838d9f
  c0:	f0838d9f 			@ <UNDEFINED> instruction: 0xf0838d9f
  c4:	f0838d9f 			@ <UNDEFINED> instruction: 0xf0838d9f
  c8:	f0838d9f 			@ <UNDEFINED> instruction: 0xf0838d9f
  cc:	20838d9f 	umullcs	r8, r3, pc, sp	@ <UNPREDICTABLE>
  d0:	20202020 	eorcs	r2, r0, r0, lsr #32
  d4:	0a202020 	beq	80815c <SomeExampleTrices+0x80815c>
  d8:	32000a0a 	andcc	r0, r0, #40960	@ 0xa000
  dc:	3831372e 	ldmdacc	r1!, {r1, r2, r3, r5, r8, r9, sl, ip, sp}
  e0:	38313832 	ldmdacc	r1!, {r1, r4, r5, fp, ip, sp}
  e4:	35343832 	ldrcc	r3, [r4, #-2098]!	@ 0xfffff7ce
  e8:	35343039 	ldrcc	r3, [r4, #-57]!	@ 0xffffffc7
  ec:	33353332 	teqcc	r5, #-939524096	@ 0xc8000000
  f0:	64720036 	ldrbtvs	r0, [r2], #-54	@ 0xffffffca
  f4:	2073253a 	rsbscs	r2, r3, sl, lsr r5
  f8:	66202d3c 			@ <UNDEFINED> instruction: 0x66202d3c
  fc:	74616f6c 	strbtvc	r6, [r1], #-3948	@ 0xfffff094
 100:	6d756e20 	ldclvs	14, cr6, [r5, #-128]!	@ 0xffffff80
 104:	20726562 	rsbscs	r6, r2, r2, ror #10
 108:	73207361 			@ <UNDEFINED> instruction: 0x73207361
 10c:	6e697274 	mcrvs	2, 3, r7, cr9, cr4, {3}
 110:	6d000a67 	vstrvs	s0, [r0, #-412]	@ 0xfffffe64
 114:	253a6773 	ldrcs	r6, [sl, #-1907]!	@ 0xfffff88d
 118:	20783230 	rsbscs	r3, r8, r0, lsr r2
 11c:	736d000a 	cmnvc	sp, #10
 120:	30253a67 	eorcc	r3, r5, r7, ror #20
 124:	20207838 	eorcs	r7, r0, r8, lsr r8
 128:	7461000a 	strbtvc	r0, [r1], #-10
 12c:	52413a74 	subpl	r3, r1, #116, 20	@ 0x74000
 130:	746f6d65 	strbtvc	r6, [pc], #-3429	@ 138 <.rodata.str1.1+0x138>
 134:	6e754665 	cdpvs	6, 7, cr4, cr5, cr5, {3}
 138:	6f697463 	svcvs	0x00697463
 13c:	6d614e6e 	stclvs	14, cr4, [r1, #-440]!	@ 0xfffffe48
 140:	Address 0x140 is out of bounds.


Disassembly of section .debug_loc:

00000000 <.debug_loc>:
void TriceHeadLine(char* name) {
   0:	ffffffff 			@ <UNDEFINED> instruction: 0xffffffff
	...
	TriceS("w: Hello! 👋🙂\n\n        ✨✨✨✨✨✨✨✨✨✨✨✨✨✨✨✨✨        \n        🎈🎈🎈🎈%s🎈🎈🎈🎈\n        🍃🍃🍃🍃🍃🍃🍃🍃🍃🍃🍃🍃🍃🍃🍃🍃🍃        \n\n\n", name);
   c:	00000006 	andeq	r0, r0, r6
  10:	06500001 	ldrbeq	r0, [r0], -r1
  14:	0e000000 	cdpeq	0, 0, cr0, cr0, cr0, {0}
  18:	01000000 	mrseq	r0, (UNDEF: 0)
  1c:	00005200 	andeq	r5, r0, r0, lsl #4
void SomeExampleTrices(int burstCount) {
  20:	00000000 	andeq	r0, r0, r0
  24:	ffff0000 			@ <UNDEFINED> instruction: 0xffff0000
	TRICE(ID(0), "att:🐁 Speedy Gonzales A  32-bit time stamp\n");
  28:	0000ffff 	strdeq	pc, [r0], -pc	@ <UNPREDICTABLE>
  2c:	00000000 	andeq	r0, r0, r0
  30:	00080000 	andeq	r0, r8, r0
  34:	00010000 	andeq	r0, r1, r0
  38:	00000850 	andeq	r0, r0, r0, asr r8
  3c:	0001f200 	andeq	pc, r1, r0, lsl #4
  40:	54000100 	strpl	r0, [r0], #-256	@ 0xffffff00
  44:	00000202 	andeq	r0, r0, r2, lsl #4
	TRICE(ID(0), "att:🐁 Speedy Gonzales B  32-bit time stamp\n");
  48:	00000204 	andeq	r0, r0, r4, lsl #4
  4c:	01f30004 	mvnseq	r0, r4
  50:	00009f50 	andeq	r9, r0, r0, asr pc
  54:	00000000 	andeq	r0, r0, r0
  58:	ffff0000 			@ <UNDEFINED> instruction: 0xffff0000
  5c:	0000ffff 	strdeq	pc, [r0], -pc	@ <UNPREDICTABLE>
	TRICE(ID(0), "att:🐁 Speedy Gonzales C  32-bit time stamp\n");
  60:	000c0000 	andeq	r0, ip, r0
  64:	001e0000 	andseq	r0, lr, r0
  68:	00010000 	andeq	r0, r1, r0
  6c:	00000050 	andeq	r0, r0, r0, asr r0
  70:	00000000 	andeq	r0, r0, r0
  74:	ffffff00 			@ <UNDEFINED> instruction: 0xffffff00
	TRICE(ID(0), "att:🐁 Speedy Gonzales D  32-bit time stamp\n");
  78:	000000ff 	strdeq	r0, [r0], -pc	@ <UNPREDICTABLE>
  7c:	00001000 	andeq	r1, r0, r0
  80:	00002600 	andeq	r2, r0, r0, lsl #12
  84:	71000300 	mrsvc	r0, LR_irq
	TRICE(Id(0), "att:🐁 Speedy Gonzales E  16-bit time stamp\n");
  88:	00269f06 	eoreq	r9, r6, r6, lsl #30
	TRICE(Id(0), "att:🐁 Speedy Gonzales F  16-bit time stamp\n");
  8c:	002c0000 	eoreq	r0, ip, r0
  90:	00010000 	andeq	r0, r1, r0
	TRICE(Id(0), "att:🐁 Speedy Gonzales G  16-bit time stamp\n");
  94:	00000051 	andeq	r0, r0, r1, asr r0
  98:	00000000 	andeq	r0, r0, r0
	TRICE(ID(0), "att:🐁 Speedy Gonzales D  32-bit time stamp\n");
  9c:	ffffff00 			@ <UNDEFINED> instruction: 0xffffff00
  a0:	000000ff 	strdeq	r0, [r0], -pc	@ <UNPREDICTABLE>
	TRICE(Id(0), "att:🐁 Speedy Gonzales E  16-bit time stamp\n");
  a4:	00001000 	andeq	r1, r0, r0
  a8:	00002600 	andeq	r2, r0, r0, lsl #12
	TRICE(Id(0), "att:🐁 Speedy Gonzales G  16-bit time stamp\n");
  ac:	71000300 	mrsvc	r0, LR_irq
	TRICE(Id(0), "att:🐁 Speedy Gonzales F  16-bit time stamp\n");
  b0:	00009f02 	andeq	r9, r0, r2, lsl #30
	TRICE(Id(0), "att:🐁 Speedy Gonzales H  16-bit time stamp\n");
  b4:	00000000 	andeq	r0, r0, r0
  b8:	ffff0000 			@ <UNDEFINED> instruction: 0xffff0000
	TRICE(id(0), "att:🐁 Speedy Gonzales L without time stamp\n");
  bc:	0000ffff 	strdeq	pc, [r0], -pc	@ <UNPREDICTABLE>
  c0:	00240000 	eoreq	r0, r4, r0
	TRICE(id(0), "att:🐁 Speedy Gonzales K without time stamp\n");
  c4:	01ee0000 	mvneq	r0, r0
	TRICE(id(0), "att:🐁 Speedy Gonzales J without time stamp\n");
  c8:	00040000 	andeq	r0, r4, r0
  cc:	9f01c010 	svcls	0x0001c010
	...
	TRICE(id(0), "att:🐁 Speedy Gonzales L without time stamp\n");
  d8:	ffffffff 			@ <UNDEFINED> instruction: 0xffffffff
  dc:	00000000 	andeq	r0, r0, r0
	TRice32m_0(tid);
  e0:	0000002c 	andeq	r0, r0, ip, lsr #32
  e4:	0000003a 	andeq	r0, r0, sl, lsr r0
  e8:	00500001 	subseq	r0, r0, r1
  ec:	00000000 	andeq	r0, r0, r0
  f0:	ff000000 			@ <UNDEFINED> instruction: 0xff000000
  f4:	00ffffff 	ldrshteq	pc, [pc], #255	@ <UNPREDICTABLE>
  f8:	30000000 	andcc	r0, r0, r0
  fc:	34000000 	strcc	r0, [r0], #-0
 100:	01000000 	mrseq	r0, (UNDEF: 0)
 104:	00345100 	eorseq	r5, r4, r0, lsl #2
 108:	00360000 	eorseq	r0, r6, r0
 10c:	00030000 	andeq	r0, r3, r0
 110:	369f0671 			@ <UNDEFINED> instruction: 0x369f0671
 114:	38000000 	stmdacc	r0, {}	@ <UNPREDICTABLE>
 118:	03000000 	movweq	r0, #0
 11c:	9f047100 	svcls	0x00047100
 120:	00000038 	andeq	r0, r0, r8, lsr r0
 124:	0000003e 	andeq	r0, r0, lr, lsr r0
 128:	02710003 	rsbseq	r0, r1, #3
 12c:	0000009f 	muleq	r0, pc, r0	@ <UNPREDICTABLE>
 130:	00000000 	andeq	r0, r0, r0
 134:	ffffff00 			@ <UNDEFINED> instruction: 0xffffff00
 138:	000000ff 	strdeq	r0, [r0], -pc	@ <UNPREDICTABLE>
 13c:	00003c00 	andeq	r3, r0, r0, lsl #24
 140:	00003e00 	andeq	r3, r0, r0, lsl #28
 144:	71000300 	mrsvc	r0, LR_irq
	Trice32m_0(tid);
 148:	003e9f06 	eorseq	r9, lr, r6, lsl #30
 14c:	00440000 	subeq	r0, r4, r0
 150:	00010000 	andeq	r0, r1, r0
 154:	00000051 	andeq	r0, r0, r1, asr r0
 158:	00000000 	andeq	r0, r0, r0
 15c:	ffffff00 			@ <UNDEFINED> instruction: 0xffffff00
 160:	000000ff 	strdeq	r0, [r0], -pc	@ <UNPREDICTABLE>
 164:	00003c00 	andeq	r3, r0, r0, lsl #24
 168:	0001ee00 	andeq	lr, r1, r0, lsl #28
	trice32m_0(tid);
 16c:	10000400 	andne	r0, r0, r0, lsl #8
 170:	009f01c0 	addseq	r0, pc, r0, asr #3
 174:	00000000 	andeq	r0, r0, r0
 178:	ff000000 			@ <UNDEFINED> instruction: 0xff000000
 17c:	00ffffff 	ldrshteq	pc, [pc], #255	@ <UNPREDICTABLE>
	Trice32m_0(tid);
 180:	44000000 	strmi	r0, [r0], #-0
 184:	52000000 	andpl	r0, r0, #0
 188:	01000000 	mrseq	r0, (UNDEF: 0)
	trice32m_0(tid);
 18c:	00005000 	andeq	r5, r0, r0
 190:	00000000 	andeq	r0, r0, r0
 194:	ffff0000 			@ <UNDEFINED> instruction: 0xffff0000
	TriceS("rd:%s <- float number as string\n", aString);
 198:	0000ffff 	strdeq	pc, [r0], -pc	@ <UNPREDICTABLE>
 19c:	00480000 	subeq	r0, r8, r0
 1a0:	004c0000 	subeq	r0, ip, r0
	Trice64("msg:%.20f (double with more ciphers than precision)\n", aDouble(2.71828182845904523536));
 1a4:	00010000 	andeq	r0, r1, r0
 1a8:	00004c51 	andeq	r4, r0, r1, asr ip
 1ac:	00004e00 	andeq	r4, r0, r0, lsl #28
	Trice("msg:%.20f (float  with more ciphers than precision)\n", aFloat(2.71828182845904523536));
 1b0:	71000300 	mrsvc	r0, LR_irq
 1b4:	004e9f06 	subeq	r9, lr, r6, lsl #30
	Trice("msg:%f (default rounded float)\n", aFloat(2.71828182845904523536));
 1b8:	00500000 	subseq	r0, r0, r0
 1bc:	00030000 	andeq	r0, r3, r0
	Trice32m_0(tid);
 1c0:	509f0471 	addspl	r0, pc, r1, ror r4	@ <UNPREDICTABLE>
 1c4:	56000000 	strpl	r0, [r0], -r0
 1c8:	03000000 	movweq	r0, #0
 1cc:	9f027100 	svcls	0x00027100
	...
 1d8:	ffffffff 			@ <UNDEFINED> instruction: 0xffffffff
	Trice8B("msg:%02x \n", aString, strlen(aString));
 1dc:	00000000 	andeq	r0, r0, r0
 1e0:	00000054 	andeq	r0, r0, r4, asr r0
 1e4:	00000056 	andeq	r0, r0, r6, asr r0
	Trice32B("msg:%08x  \n", aString, strlen(aString) >> 2);
 1e8:	06710003 	ldrbteq	r0, [r1], -r3
 1ec:	0000569f 	muleq	r0, pc, r6	@ <UNPREDICTABLE>
 1f0:	00005c00 	andeq	r5, r0, r0, lsl #24
	Trice16F("att:ARemoteFunctionName", aString, strlen(aString) >> 1);
 1f4:	51000100 	mrspl	r0, (UNDEF: 16)
	...
	trice("info:%d times a 16 byte long Trice messages, which not all will be written because of the TRICE_PROTECT:\n", burstCount);
 200:	ffffffff 			@ <UNDEFINED> instruction: 0xffffffff
 204:	00000000 	andeq	r0, r0, r0
 208:	00000054 	andeq	r0, r0, r4, asr r0
	for (int i = 0; i < burstCount; i++) {
 20c:	000001ee 	andeq	r0, r0, lr, ror #3
 210:	c0100004 	andsgt	r0, r0, r4
		Trice("i=%x %x\n", 0x44444400 + i, 0xaaaaaa00 + i);
 214:	00009f01 	andeq	r9, r0, r1, lsl #30
 218:	00000000 	andeq	r0, r0, r0
	for (int i = 0; i < burstCount; i++) {
 21c:	ffff0000 			@ <UNDEFINED> instruction: 0xffff0000
 220:	0000ffff 	strdeq	pc, [r0], -pc	@ <UNPREDICTABLE>
}
 224:	005c0000 	subseq	r0, ip, r0
 228:	00880000 	addeq	r0, r8, r0
 22c:	00010000 	andeq	r0, r1, r0
 230:	00000050 	andeq	r0, r0, r0, asr r0
 234:	00000000 	andeq	r0, r0, r0
 238:	ffffff00 			@ <UNDEFINED> instruction: 0xffffff00
 23c:	000000ff 	strdeq	r0, [r0], -pc	@ <UNPREDICTABLE>
 240:	00006600 	andeq	r6, r0, r0, lsl #12
 244:	00007e00 	andeq	r7, r0, r0, lsl #28
 248:	51000100 	mrspl	r0, (UNDEF: 16)
 24c:	0000007e 	andeq	r0, r0, lr, ror r0
 250:	00000080 	andeq	r0, r0, r0, lsl #1
 254:	06710003 	ldrbteq	r0, [r1], -r3
 258:	0000809f 	muleq	r0, pc, r0	@ <UNPREDICTABLE>
 25c:	00008200 	andeq	r8, r0, r0, lsl #4
 260:	71000300 	mrsvc	r0, LR_irq
 264:	00829f04 	addeq	r9, r2, r4, lsl #30
 268:	00ba0000 	adcseq	r0, sl, r0
 26c:	00030000 	andeq	r0, r3, r0
 270:	009f0271 	addseq	r0, pc, r1, ror r2	@ <UNPREDICTABLE>
 274:	00000000 	andeq	r0, r0, r0
 278:	ff000000 			@ <UNDEFINED> instruction: 0xff000000
 27c:	00ffffff 	ldrshteq	pc, [pc], #255	@ <UNPREDICTABLE>
 280:	b8000000 	stmdalt	r0, {}	@ <UNPREDICTABLE>
 284:	ba000000 	blt	28c <.debug_loc+0x28c>
 288:	03000000 	movweq	r0, #0
 28c:	9f367100 	svcls	0x00367100
 290:	000000ba 	strheq	r0, [r0], -sl
 294:	000000c2 	andeq	r0, r0, r2, asr #1
void LogTriceConfiguration(void) {
 298:	00510001 	subseq	r0, r1, r1
 29c:	00000000 	andeq	r0, r0, r0
	trice("deb:TRICE_DIRECT_OUTPUT == %d, TRICE_DEFERRED_OUTPUT == %d\n", TRICE_DIRECT_OUTPUT, TRICE_DEFERRED_OUTPUT);
 2a0:	ff000000 			@ <UNDEFINED> instruction: 0xff000000
 2a4:	00ffffff 	ldrshteq	pc, [pc], #255	@ <UNPREDICTABLE>
 2a8:	b8000000 	stmdalt	r0, {}	@ <UNPREDICTABLE>
 2ac:	ee000000 	cdp	0, 0, cr0, cr0, cr0, {0}
 2b0:	04000001 	streq	r0, [r0], #-1
	trice32m_0(tid);
 2b4:	01c01000 	biceq	r1, r0, r0
 2b8:	0000009f 	muleq	r0, pc, r0	@ <UNPREDICTABLE>
 2bc:	00000000 	andeq	r0, r0, r0
	trice("deb:_CYCLE == %d, _PROTECT == %d, _DIAG == %d, XTEA == %d\n", TRICE_CYCLE_COUNTER, TRICE_PROTECT, TRICE_DIAGNOSTICS, TRICE_DEFERRED_XTEA_ENCRYPT);
 2c0:	ffffff00 			@ <UNDEFINED> instruction: 0xffffff00
 2c4:	000000ff 	strdeq	r0, [r0], -pc	@ <UNPREDICTABLE>
 2c8:	0000c200 	andeq	ip, r0, r0, lsl #4
 2cc:	0000d400 	andeq	sp, r0, r0, lsl #8
 2d0:	50000100 	andpl	r0, r0, r0, lsl #2
	...
 2dc:	ffffffff 			@ <UNDEFINED> instruction: 0xffffffff
 2e0:	00000000 	andeq	r0, r0, r0
 2e4:	000000e0 	andeq	r0, r0, r0, ror #1
 2e8:	000000f0 	strdeq	r0, [r0], -r0	@ <UNPREDICTABLE>
 2ec:	00500001 	subseq	r0, r0, r1
 2f0:	00000000 	andeq	r0, r0, r0
 2f4:	ff000000 			@ <UNDEFINED> instruction: 0xff000000
 2f8:	00ffffff 	ldrshteq	pc, [pc], #255	@ <UNPREDICTABLE>
 2fc:	fa000000 	blx	304 <.debug_loc+0x304>
 300:	0a000000 	beq	308 <.debug_loc+0x308>
 304:	01000001 	tsteq	r0, r1
 308:	00005000 	andeq	r5, r0, r0
 30c:	00000000 	andeq	r0, r0, r0
 310:	ffff0000 			@ <UNDEFINED> instruction: 0xffff0000
 314:	0000ffff 	strdeq	pc, [r0], -pc	@ <UNPREDICTABLE>
 318:	01160000 	tsteq	r6, r0
 31c:	01200000 			@ <UNDEFINED> instruction: 0x01200000
 320:	00010000 	andeq	r0, r1, r0
 324:	00000050 	andeq	r0, r0, r0, asr r0
 328:	00000000 	andeq	r0, r0, r0
 32c:	ffffff00 			@ <UNDEFINED> instruction: 0xffffff00
 330:	000000ff 	strdeq	r0, [r0], -pc	@ <UNPREDICTABLE>
 334:	00012a00 	andeq	r2, r1, r0, lsl #20
 338:	00013000 	andeq	r3, r1, r0
 33c:	70000300 	andvc	r0, r0, r0, lsl #6
 340:	00009f00 	andeq	r9, r0, r0, lsl #30
 344:	00000000 	andeq	r0, r0, r0
 348:	ffff0000 			@ <UNDEFINED> instruction: 0xffff0000
 34c:	0000ffff 	strdeq	pc, [r0], -pc	@ <UNPREDICTABLE>
 350:	01360000 	teqeq	r6, r0
 354:	013c0000 	teqeq	ip, r0
 358:	00030000 	andeq	r0, r3, r0
 35c:	009f0070 	addseq	r0, pc, r0, ror r0	@ <UNPREDICTABLE>
 360:	00000000 	andeq	r0, r0, r0
 364:	ff000000 			@ <UNDEFINED> instruction: 0xff000000
 368:	00ffffff 	ldrshteq	pc, [pc], #255	@ <UNPREDICTABLE>
 36c:	42000000 	andmi	r0, r0, #0
 370:	48000001 	stmdami	r0, {r0}
 374:	03000001 	movweq	r0, #1
 378:	9f007000 	svcls	0x00007000
	...
 384:	ffffffff 			@ <UNDEFINED> instruction: 0xffffffff
 388:	00000000 	andeq	r0, r0, r0
 38c:	00000154 	andeq	r0, r0, r4, asr r1
 390:	00000164 	andeq	r0, r0, r4, ror #2
 394:	00700003 	rsbseq	r0, r0, r3
 398:	0000009f 	muleq	r0, pc, r0	@ <UNPREDICTABLE>
 39c:	00000000 	andeq	r0, r0, r0
 3a0:	ffffff00 			@ <UNDEFINED> instruction: 0xffffff00
 3a4:	000000ff 	strdeq	r0, [r0], -pc	@ <UNPREDICTABLE>
 3a8:	00015c00 	andeq	r5, r1, r0, lsl #24
 3ac:	0001ee00 	andeq	lr, r1, r0, lsl #28
 3b0:	10000400 	andne	r0, r0, r0, lsl #8
 3b4:	009f7fda 			@ <UNDEFINED> instruction: 0x009f7fda
 3b8:	00000000 	andeq	r0, r0, r0
 3bc:	ff000000 			@ <UNDEFINED> instruction: 0xff000000
 3c0:	00ffffff 	ldrshteq	pc, [pc], #255	@ <UNPREDICTABLE>
 3c4:	7e000000 	cdpvc	0, 0, cr0, cr0, cr0, {0}
 3c8:	82000001 	andhi	r0, r0, #1
 3cc:	01000001 	tsteq	r0, r1
 3d0:	01c25200 	biceq	r5, r2, r0, lsl #4
 3d4:	01f20000 	mvnseq	r0, r0
 3d8:	00010000 	andeq	r0, r1, r0
 3dc:	00000055 	andeq	r0, r0, r5, asr r0
 3e0:	00000000 	andeq	r0, r0, r0
 3e4:	ffffff00 			@ <UNDEFINED> instruction: 0xffffff00
 3e8:	000000ff 	strdeq	r0, [r0], -pc	@ <UNPREDICTABLE>
 3ec:	0001a200 	andeq	sl, r1, r0, lsl #4
 3f0:	0001ee00 	andeq	lr, r1, r0, lsl #28
 3f4:	10000400 	andne	r0, r0, r0, lsl #8
 3f8:	009f7fd4 			@ <UNDEFINED> instruction: 0x009f7fd4
 3fc:	00000000 	andeq	r0, r0, r0
 400:	ff000000 			@ <UNDEFINED> instruction: 0xff000000
 404:	00ffffff 	ldrshteq	pc, [pc], #255	@ <UNPREDICTABLE>
 408:	a4000000 	strge	r0, [r0], #-0
 40c:	b4000001 	strlt	r0, [r0], #-1
 410:	03000001 	movweq	r0, #1
 414:	9f007000 	svcls	0x00007000
	...
 420:	ffffffff 			@ <UNDEFINED> instruction: 0xffffffff
 424:	00000000 	andeq	r0, r0, r0
 428:	000001ea 	andeq	r0, r0, sl, ror #3
 42c:	000001f2 	strdeq	r0, [r0], -r2
 430:	00110003 	andseq	r0, r1, r3
 434:	0000009f 	muleq	r0, pc, r0	@ <UNPREDICTABLE>
 438:	00000000 	andeq	r0, r0, r0
 43c:	ffffff00 			@ <UNDEFINED> instruction: 0xffffff00
 440:	000000ff 	strdeq	r0, [r0], -pc	@ <UNPREDICTABLE>
 444:	00001c00 	andeq	r1, r0, r0, lsl #24
 448:	00004600 	andeq	r4, r0, r0, lsl #12
 44c:	10000400 	andne	r0, r0, r0, lsl #8
 450:	009f7fcb 	addseq	r7, pc, fp, asr #31
 454:	00000000 	andeq	r0, r0, r0
 458:	Address 0x458 is out of bounds.


Disassembly of section .debug_abbrev:

00000000 <.debug_abbrev>:
void TriceHeadLine(char* name) {
   0:	25011101 	strcs	r1, [r1, #-257]	@ 0xfffffeff
   4:	0305130e 	movweq	r1, #21262	@ 0x530e
	TriceS("w: Hello! 👋🙂\n\n        ✨✨✨✨✨✨✨✨✨✨✨✨✨✨✨✨✨        \n        🎈🎈🎈🎈%s🎈🎈🎈🎈\n        🍃🍃🍃🍃🍃🍃🍃🍃🍃🍃🍃🍃🍃🍃🍃🍃🍃        \n\n\n", name);
   8:	1b17100e 	blne	5c4048 <SomeExampleTrices+0x5c4048>
   c:	5501110e 	strpl	r1, [r1, #-270]	@ 0xfffffef2
  10:	02000017 	andeq	r0, r0, #23
  14:	13490034 	movtne	r0, #36916	@ 0x9034
  18:	0b3b0b3a 	bleq	ec2d08 <SomeExampleTrices+0xec2d08>
  1c:	00001802 	andeq	r1, r0, r2, lsl #16
void SomeExampleTrices(int burstCount) {
  20:	49010103 	stmdbmi	r1, {r0, r1, r8}
  24:	04000013 	streq	r0, [r0], #-19	@ 0xffffffed
	TRICE(ID(0), "att:🐁 Speedy Gonzales A  32-bit time stamp\n");
  28:	13490021 	movtne	r0, #36897	@ 0x9021
  2c:	00000b37 	andeq	r0, r0, r7, lsr fp
  30:	03002405 	movweq	r2, #1029	@ 0x405
  34:	0b0b3e0e 	bleq	2cf874 <SomeExampleTrices+0x2cf874>
  38:	0600000b 	streq	r0, [r0], -fp
  3c:	0e030024 	cdpeq	0, 0, cr0, cr3, cr4, {1}
  40:	0b3e0b0b 	bleq	f82c74 <SomeExampleTrices+0xf82c74>
  44:	34070000 	strcc	r0, [r7], #-0
	TRICE(ID(0), "att:🐁 Speedy Gonzales B  32-bit time stamp\n");
  48:	3a134900 	bcc	4d2450 <SomeExampleTrices+0x4d2450>
  4c:	000b3b0b 	andeq	r3, fp, fp, lsl #22
  50:	000f0800 	andeq	r0, pc, r0, lsl #16
  54:	00001349 	andeq	r1, r0, r9, asr #6
  58:	49001609 	stmdbmi	r0, {r0, r3, r9, sl, ip}
  5c:	3a0e0313 	bcc	380cb0 <SomeExampleTrices+0x380cb0>
	TRICE(ID(0), "att:🐁 Speedy Gonzales C  32-bit time stamp\n");
  60:	000b3b0b 	andeq	r3, fp, fp, lsl #22
  64:	00160a00 	andseq	r0, r6, r0, lsl #20
  68:	0e031349 	cdpeq	3, 0, cr1, cr3, cr9, {2}
  6c:	053b0b3a 	ldreq	r0, [fp, #-2874]!	@ 0xfffff4c6
  70:	130b0000 	movwne	r0, #45056	@ 0xb000
  74:	3a0b0b01 	bcc	2c2c80 <SomeExampleTrices+0x2c2c80>
	TRICE(ID(0), "att:🐁 Speedy Gonzales D  32-bit time stamp\n");
  78:	00053b0b 	andeq	r3, r5, fp, lsl #22
  7c:	000d0c00 	andeq	r0, sp, r0, lsl #24
  80:	13490e03 	movtne	r0, #40451	@ 0x9e03
  84:	053b0b3a 	ldreq	r0, [fp, #-2874]!	@ 0xfffff4c6
	TRICE(Id(0), "att:🐁 Speedy Gonzales E  16-bit time stamp\n");
  88:	00000b38 	andeq	r0, r0, r8, lsr fp
	TRICE(Id(0), "att:🐁 Speedy Gonzales F  16-bit time stamp\n");
  8c:	4900350d 	stmdbmi	r0, {r0, r2, r3, r8, sl, ip, sp}
  90:	0e000013 	mcreq	0, 0, r0, cr0, cr3, {0}
	TRICE(Id(0), "att:🐁 Speedy Gonzales G  16-bit time stamp\n");
  94:	0111012e 	tsteq	r1, lr, lsr #2
  98:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
	TRICE(ID(0), "att:🐁 Speedy Gonzales D  32-bit time stamp\n");
  9c:	03194297 	tsteq	r9, #1879048201	@ 0x70000009
  a0:	3b0b3a0e 	blcc	2ce8e0 <SomeExampleTrices+0x2ce8e0>
	TRICE(Id(0), "att:🐁 Speedy Gonzales E  16-bit time stamp\n");
  a4:	3f19270b 	svccc	0x0019270b
  a8:	0f000019 	svceq	0x00000019
	TRICE(Id(0), "att:🐁 Speedy Gonzales G  16-bit time stamp\n");
  ac:	17020005 	strne	r0, [r2, -r5]
	TRICE(Id(0), "att:🐁 Speedy Gonzales F  16-bit time stamp\n");
  b0:	0b3a0e03 	bleq	e838c4 <SomeExampleTrices+0xe838c4>
	TRICE(Id(0), "att:🐁 Speedy Gonzales H  16-bit time stamp\n");
  b4:	13490b3b 	movtne	r0, #39739	@ 0x9b3b
  b8:	2e100000 	cdpcs	0, 1, cr0, cr0, cr0, {0}
	TRICE(id(0), "att:🐁 Speedy Gonzales L without time stamp\n");
  bc:	3a0e0301 	bcc	380cc8 <SomeExampleTrices+0x380cc8>
  c0:	27053b0b 	strcs	r3, [r5, -fp, lsl #22]
	TRICE(id(0), "att:🐁 Speedy Gonzales K without time stamp\n");
  c4:	000b2019 	andeq	r2, fp, r9, lsl r0
	TRICE(id(0), "att:🐁 Speedy Gonzales J without time stamp\n");
  c8:	00051100 	andeq	r1, r5, r0, lsl #2
  cc:	0b3a0e03 	bleq	e838e0 <SomeExampleTrices+0xe838e0>
	TRICE(id(0), "att:🐁 Speedy Gonzales I without time stamp\n");
  d0:	1349053b 	movtne	r0, #38203	@ 0x953b
	TRICE(Id(0), "att:🐁 Speedy Gonzales H  16-bit time stamp\n");
  d4:	0b120000 	bleq	4800dc <SomeExampleTrices+0x4800dc>
	TRICE(id(0), "att:🐁 Speedy Gonzales L without time stamp\n");
  d8:	13000001 	movwne	r0, #1
  dc:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
	TRice32m_0(tid);
  e0:	053b0b3a 	ldreq	r0, [fp, #-2874]!	@ 0xfffff4c6
  e4:	00001349 	andeq	r1, r0, r9, asr #6
  e8:	49002614 	stmdbmi	r0, {r2, r4, r9, sl, sp}
  ec:	15000013 	strne	r0, [r0, #-19]	@ 0xffffffed
  f0:	17020034 	smladxne	r2, r4, r0, r0
  f4:	0b3a0e03 	bleq	e83908 <SomeExampleTrices+0xe83908>
  f8:	13490b3b 	movtne	r0, #39739	@ 0x9b3b
  fc:	0b160000 	bleq	580104 <SomeExampleTrices+0x580104>
 100:	00175501 	andseq	r5, r7, r1, lsl #10
 104:	010b1700 	tsteq	fp, r0, lsl #14
 108:	06120111 			@ <UNDEFINED> instruction: 0x06120111
 10c:	34180000 	ldrcc	r0, [r8], #-0
 110:	030f1c00 	movweq	r1, #64512	@ 0xfc00
 114:	3b0b3a0e 	blcc	2ce954 <SomeExampleTrices+0x2ce954>
 118:	0013490b 	andseq	r4, r3, fp, lsl #18
 11c:	00341900 	eorseq	r1, r4, r0, lsl #18
 120:	0e031802 	cdpeq	8, 0, cr1, cr3, cr2, {0}
 124:	0b3b0b3a 	bleq	ec2e14 <SomeExampleTrices+0xec2e14>
 128:	00001349 	andeq	r1, r0, r9, asr #6
 12c:	0300341a 	movweq	r3, #1050	@ 0x41a
 130:	3b0b3a0e 	blcc	2ce970 <SomeExampleTrices+0x2ce970>
 134:	0013490b 	andseq	r4, r3, fp, lsl #18
 138:	011d1b00 	tsteq	sp, r0, lsl #22
 13c:	01111331 	tsteq	r1, r1, lsr r3
 140:	0b580612 	bleq	1601990 <SomeExampleTrices+0x1601990>
 144:	0b570b59 	bleq	15c2eb0 <SomeExampleTrices+0x15c2eb0>
	Trice32m_0(tid);
 148:	051c0000 	ldreq	r0, [ip, #-0]
 14c:	310f1c00 	tstcc	pc, r0, lsl #24
 150:	1d000013 	stcne	0, cr0, [r0, #-76]	@ 0xffffffb4
 154:	17020034 	smladxne	r2, r4, r0, r0
 158:	00001331 	andeq	r1, r0, r1, lsr r3
 15c:	31011d1e 	tstcc	r1, lr, lsl sp
 160:	58175513 	ldmdapl	r7, {r0, r1, r4, r8, sl, ip, lr}
 164:	570b590b 	strpl	r5, [fp, -fp, lsl #18]
 168:	1f00000b 	svcne	0x0000000b
	trice32m_0(tid);
 16c:	17020005 	strne	r0, [r2, -r5]
 170:	00001331 	andeq	r1, r0, r1, lsr r3
	...

Disassembly of section .debug_info:

00000000 <.debug_info>:
void TriceHeadLine(char* name) {
   0:	00000a2d 	andeq	r0, r0, sp, lsr #20
   4:	00000004 	andeq	r0, r0, r4
	TriceS("w: Hello! 👋🙂\n\n        ✨✨✨✨✨✨✨✨✨✨✨✨✨✨✨✨✨        \n        🎈🎈🎈🎈%s🎈🎈🎈🎈\n        🍃🍃🍃🍃🍃🍃🍃🍃🍃🍃🍃🍃🍃🍃🍃🍃🍃        \n\n\n", name);
   8:	01040000 	mrseq	r0, (UNDEF: 4)
   c:	00000000 	andeq	r0, r0, r0
  10:	0015001d 	andseq	r0, r5, sp, lsl r0
  14:	00000000 	andeq	r0, r0, r0
  18:	00340000 	eorseq	r0, r4, r0
  1c:	00000000 	andeq	r0, r0, r0
void SomeExampleTrices(int burstCount) {
  20:	02800000 	addeq	r0, r0, #0
  24:	33020000 	movwcc	r0, #8192	@ 0x2000
	TRICE(ID(0), "att:🐁 Speedy Gonzales A  32-bit time stamp\n");
  28:	01000000 	mrseq	r0, (UNDEF: 0)
  2c:	0003050a 	andeq	r0, r3, sl, lsl #10
  30:	03000000 	movweq	r0, #0
  34:	0000003f 	andeq	r0, r0, pc, lsr r0
  38:	00004604 	andeq	r4, r0, r4, lsl #12
  3c:	0500db00 	streq	sp, [r0, #-2816]	@ 0xfffff500
  40:	00000068 	andeq	r0, r0, r8, rrx
  44:	6d060108 	stfvss	f0, [r6, #-32]	@ 0xffffffe0
	TRICE(ID(0), "att:🐁 Speedy Gonzales B  32-bit time stamp\n");
  48:	08000000 	stmdaeq	r0, {}	@ <UNPREDICTABLE>
  4c:	00540707 	subseq	r0, r4, r7, lsl #14
  50:	1b010000 	blne	40058 <SomeExampleTrices+0x40058>
  54:	00003f03 	andeq	r3, r0, r3, lsl #30
  58:	00460400 	subeq	r0, r6, r0, lsl #8
  5c:	002f0000 	eoreq	r0, pc, r0
	TRICE(ID(0), "att:🐁 Speedy Gonzales C  32-bit time stamp\n");
  60:	00005407 	andeq	r5, r0, r7, lsl #8
  64:	071c0100 	ldreq	r0, [ip, -r0, lsl #2]
  68:	00000054 	andeq	r0, r0, r4, asr r0
  6c:	54071d01 	strpl	r1, [r7], #-3329	@ 0xfffff2ff
  70:	01000000 	mrseq	r0, (UNDEF: 0)
  74:	0054071e 	subseq	r0, r4, lr, lsl r7
	TRICE(ID(0), "att:🐁 Speedy Gonzales D  32-bit time stamp\n");
  78:	1f010000 	svcne	0x00010000
  7c:	00005407 	andeq	r5, r0, r7, lsl #8
  80:	07200100 	streq	r0, [r0, -r0, lsl #2]!
  84:	00000054 	andeq	r0, r0, r4, asr r0
	TRICE(Id(0), "att:🐁 Speedy Gonzales E  16-bit time stamp\n");
  88:	54072101 	strpl	r2, [r7], #-257	@ 0xfffffeff
	TRICE(Id(0), "att:🐁 Speedy Gonzales F  16-bit time stamp\n");
  8c:	01000000 	mrseq	r0, (UNDEF: 0)
  90:	00540722 	subseq	r0, r4, r2, lsr #14
	TRICE(Id(0), "att:🐁 Speedy Gonzales G  16-bit time stamp\n");
  94:	23010000 	movwcs	r0, #4096	@ 0x1000
  98:	00005407 	andeq	r5, r0, r7, lsl #8
	TRICE(ID(0), "att:🐁 Speedy Gonzales D  32-bit time stamp\n");
  9c:	07240100 	streq	r0, [r4, -r0, lsl #2]!
  a0:	00000054 	andeq	r0, r0, r4, asr r0
	TRICE(Id(0), "att:🐁 Speedy Gonzales E  16-bit time stamp\n");
  a4:	54072501 	strpl	r2, [r7], #-1281	@ 0xfffffaff
  a8:	01000000 	mrseq	r0, (UNDEF: 0)
	TRICE(Id(0), "att:🐁 Speedy Gonzales G  16-bit time stamp\n");
  ac:	00ba0226 	adcseq	r0, sl, r6, lsr #4
	TRICE(Id(0), "att:🐁 Speedy Gonzales F  16-bit time stamp\n");
  b0:	27010000 	strcs	r0, [r1, -r0]
	TRICE(Id(0), "att:🐁 Speedy Gonzales H  16-bit time stamp\n");
  b4:	00db0305 	sbcseq	r0, fp, r5, lsl #6
  b8:	3f030000 	svccc	0x00030000
	TRICE(id(0), "att:🐁 Speedy Gonzales L without time stamp\n");
  bc:	04000000 	streq	r0, [r0], #-0
  c0:	00000046 	andeq	r0, r0, r6, asr #32
	TRICE(id(0), "att:🐁 Speedy Gonzales K without time stamp\n");
  c4:	d3020017 	movwle	r0, #8215	@ 0x2017
	TRICE(id(0), "att:🐁 Speedy Gonzales J without time stamp\n");
  c8:	01000000 	mrseq	r0, (UNDEF: 0)
  cc:	f2030528 	vrshl.s8	d0, d24, d3
	TRICE(id(0), "att:🐁 Speedy Gonzales I without time stamp\n");
  d0:	03000000 	movweq	r0, #0
	TRICE(Id(0), "att:🐁 Speedy Gonzales H  16-bit time stamp\n");
  d4:	0000003f 	andeq	r0, r0, pc, lsr r0
	TRICE(id(0), "att:🐁 Speedy Gonzales L without time stamp\n");
  d8:	00004604 	andeq	r4, r0, r4, lsl #12
  dc:	07002100 	streq	r2, [r0, -r0, lsl #2]
	TRice32m_0(tid);
  e0:	000000e6 	andeq	r0, r0, r6, ror #1
  e4:	3f032c01 	svccc	0x00032c01
  e8:	04000000 	streq	r0, [r0], #-0
  ec:	00000046 	andeq	r0, r0, r6, asr #32
  f0:	ff020010 			@ <UNDEFINED> instruction: 0xff020010
  f4:	01000000 	mrseq	r0, (UNDEF: 0)
  f8:	1303052d 	movwne	r0, #13613	@ 0x352d
  fc:	03000001 	movweq	r0, #1
 100:	0000003f 	andeq	r0, r0, pc, lsr r0
 104:	00004604 	andeq	r4, r0, r4, lsl #12
 108:	02000b00 	andeq	r0, r0, #0, 22
 10c:	00000118 	andeq	r0, r0, r8, lsl r1
 110:	03052e01 	movweq	r2, #24065	@ 0x5e01
 114:	0000011e 	andeq	r0, r0, lr, lsl r1
 118:	00003f03 	andeq	r3, r0, r3, lsl #30
 11c:	00460400 	subeq	r0, r6, r0, lsl #8
 120:	000c0000 	andeq	r0, ip, r0
 124:	00013102 	andeq	r3, r1, r2, lsl #2
 128:	052f0100 	streq	r0, [pc, #-256]!	@ 30 <.debug_info+0x30>
 12c:	00012a03 	andeq	r2, r1, r3, lsl #20
 130:	003f0300 	eorseq	r0, pc, r0, lsl #6
 134:	46040000 	strmi	r0, [r4], -r0
 138:	18000000 	stmdane	r0, {}	@ <UNPREDICTABLE>
 13c:	01440700 	cmpeq	r4, r0, lsl #14
 140:	41010000 	mrsmi	r0, (UNDEF: 1)
 144:	00003f03 	andeq	r3, r0, r3, lsl #30
	Trice32m_0(tid);
 148:	00460400 	subeq	r0, r6, r0, lsl #8
 14c:	001a0000 	andseq	r0, sl, r0
 150:	00015707 	andeq	r5, r1, r7, lsl #14
 154:	03480100 	movteq	r0, #33024	@ 0x8100
 158:	0000003f 	andeq	r0, r0, pc, lsr r0
 15c:	00004604 	andeq	r4, r0, r4, lsl #12
 160:	08001b00 	stmdaeq	r0, {r8, r9, fp, ip}
 164:	00000168 	andeq	r0, r0, r8, ror #2
 168:	00017309 	andeq	r7, r1, r9, lsl #6
	trice32m_0(tid);
 16c:	00009b00 	andeq	r9, r0, r0, lsl #22
 170:	09240300 	stmdbeq	r4!, {r8, r9}
 174:	0000017e 	andeq	r0, r0, lr, ror r1
 178:	00000090 	muleq	r0, r0, r0
 17c:	81053902 	tsthi	r5, r2, lsl #18
	Trice32m_0(tid);
 180:	07000000 	streq	r0, [r0, -r0]
 184:	018a0802 	orreq	r0, sl, r2, lsl #16
 188:	95090000 	strls	r0, [r9, #-0]
	trice32m_0(tid);
 18c:	bc000001 	stclt	0, cr0, [r0], {1}
 190:	03000000 	movweq	r0, #0
 194:	01a00930 	lsreq	r0, r0, r9
	TriceS("rd:%s <- float number as string\n", aString);
 198:	00b10000 	adcseq	r0, r1, r0
 19c:	4f020000 	svcmi	0x00020000
 1a0:	0000a405 	andeq	sl, r0, r5, lsl #8
	Trice64("msg:%.20f (double with more ciphers than precision)\n", aDouble(2.71828182845904523536));
 1a4:	08040700 	stmdaeq	r4, {r8, r9, sl}
 1a8:	000001ac 	andeq	r0, r0, ip, lsr #3
 1ac:	0001b80a 	andeq	fp, r1, sl, lsl #16
	Trice("msg:%.20f (float  with more ciphers than precision)\n", aFloat(2.71828182845904523536));
 1b0:	00014300 	andeq	r4, r1, r0, lsl #6
 1b4:	02850400 	addeq	r0, r5, #0, 8
	Trice("msg:%f (default rounded float)\n", aFloat(2.71828182845904523536));
 1b8:	68046c0b 	stmdavs	r4, {r0, r1, r3, sl, fp, sp, lr}
 1bc:	00c50c02 	sbceq	r0, r5, r2, lsl #24
	Trice32m_0(tid);
 1c0:	031d0000 	tsteq	sp, #0
 1c4:	6a040000 	bvs	1001cc <SomeExampleTrices+0x1001cc>
 1c8:	c90c0002 	stmdbgt	ip, {r1}
 1cc:	1d000000 	stcne	0, cr0, [r0, #-0]
 1d0:	04000003 	streq	r0, [r0], #-3
 1d4:	0c04026b 	sfmeq	f0, 4, [r4], {107}	@ 0x6b
 1d8:	000000cd 	andeq	r0, r0, sp, asr #1
	Trice8B("msg:%02x \n", aString, strlen(aString));
 1dc:	0000031d 	andeq	r0, r0, sp, lsl r3
 1e0:	08026c04 	stmdaeq	r2, {r2, sl, fp, sp, lr}
 1e4:	0000d20c 	andeq	sp, r0, ip, lsl #4
	Trice32B("msg:%08x  \n", aString, strlen(aString) >> 2);
 1e8:	00031d00 	andeq	r1, r3, r0, lsl #26
 1ec:	026d0400 	rsbeq	r0, sp, #0, 8
 1f0:	00d70c0c 	sbcseq	r0, r7, ip, lsl #24
	Trice16F("att:ARemoteFunctionName", aString, strlen(aString) >> 1);
 1f4:	031d0000 	tsteq	sp, #0
 1f8:	6e040000 	cdpvs	0, 0, cr0, cr4, cr0, {0}
 1fc:	da0c1002 	ble	30420c <SomeExampleTrices+0x30420c>
	trice("info:%d times a 16 byte long Trice messages, which not all will be written because of the TRICE_PROTECT:\n", burstCount);
 200:	1d000000 	stcne	0, cr0, [r0, #-0]
 204:	04000003 	streq	r0, [r0], #-3
 208:	0c14026f 	lfmeq	f0, 4, [r4], {111}	@ 0x6f
	for (int i = 0; i < burstCount; i++) {
 20c:	000000de 	ldrdeq	r0, [r0], -lr
 210:	0000031d 	andeq	r0, r0, sp, lsl r3
		Trice("i=%x %x\n", 0x44444400 + i, 0xaaaaaa00 + i);
 214:	18027004 	stmdane	r2, {r2, ip, sp, lr}
 218:	0000e40c 	andeq	lr, r0, ip, lsl #8
	for (int i = 0; i < burstCount; i++) {
 21c:	00031d00 	andeq	r1, r3, r0, lsl #26
 220:	02710400 	rsbseq	r0, r1, #0, 8
}
 224:	00ea0c1c 	rsceq	r0, sl, ip, lsl ip
 228:	031d0000 	tsteq	sp, #0
 22c:	72040000 	andvc	r0, r4, #0
 230:	ef0c2002 	svc	0x000c2002
 234:	1d000000 	stcne	0, cr0, [r0, #-0]
 238:	04000003 	streq	r0, [r0], #-3
 23c:	0c240273 	sfmeq	f0, 4, [r4], #-460	@ 0xfffffe34
 240:	000000f3 	strdeq	r0, [r0], -r3
 244:	0000031d 	andeq	r0, r0, sp, lsl r3
 248:	28027404 	stmdacs	r2, {r2, sl, ip, sp, lr}
 24c:	0000f70c 	andeq	pc, r0, ip, lsl #14
 250:	00031d00 	andeq	r1, r3, r0, lsl #26
 254:	02750400 	rsbseq	r0, r5, #0, 8
 258:	00fb0c2c 	rscseq	r0, fp, ip, lsr #24
 25c:	031d0000 	tsteq	sp, #0
 260:	76040000 	strvc	r0, [r4], -r0
 264:	ff0c3002 			@ <UNDEFINED> instruction: 0xff0c3002
 268:	1d000000 	stcne	0, cr0, [r0, #-0]
 26c:	04000003 	streq	r0, [r0], #-3
 270:	0c340277 	lfmeq	f0, 4, [r4], #-476	@ 0xfffffe24
 274:	00000104 	andeq	r0, r0, r4, lsl #2
 278:	0000031d 	andeq	r0, r0, sp, lsl r3
 27c:	38027804 	stmdacc	r2, {r2, fp, ip, sp, lr}
 280:	0001090c 	andeq	r0, r1, ip, lsl #18
 284:	00031d00 	andeq	r1, r3, r0, lsl #26
 288:	02790400 	rsbseq	r0, r9, #0, 8
 28c:	010e0c3c 	tsteq	lr, ip, lsr ip
 290:	031d0000 	tsteq	sp, #0
 294:	7a040000 	bvc	10029c <SomeExampleTrices+0x10029c>
void LogTriceConfiguration(void) {
 298:	130c4002 	movwne	r4, #49154	@ 0xc002
 29c:	1d000001 	stcne	0, cr0, [r0, #-4]
	trice("deb:TRICE_DIRECT_OUTPUT == %d, TRICE_DEFERRED_OUTPUT == %d\n", TRICE_DIRECT_OUTPUT, TRICE_DEFERRED_OUTPUT);
 2a0:	04000003 	streq	r0, [r0], #-3
 2a4:	0c44027b 	sfmeq	f0, 2, [r4], {123}	@ 0x7b
 2a8:	00000118 	andeq	r0, r0, r8, lsl r1
 2ac:	0000031d 	andeq	r0, r0, sp, lsl r3
 2b0:	48027c04 	stmdami	r2, {r2, sl, fp, ip, sp, lr}
	trice32m_0(tid);
 2b4:	00011c0c 	andeq	r1, r1, ip, lsl #24
 2b8:	00031d00 	andeq	r1, r3, r0, lsl #26
 2bc:	027d0400 	rsbseq	r0, sp, #0, 8
	trice("deb:_CYCLE == %d, _PROTECT == %d, _DIAG == %d, XTEA == %d\n", TRICE_CYCLE_COUNTER, TRICE_PROTECT, TRICE_DIAGNOSTICS, TRICE_DEFERRED_XTEA_ENCRYPT);
 2c0:	01210c4c 			@ <UNDEFINED> instruction: 0x01210c4c
 2c4:	031d0000 	tsteq	sp, #0
 2c8:	7e040000 	cdpvc	0, 0, cr0, cr4, cr0, {0}
 2cc:	250c5002 	strcs	r5, [ip, #-2]
 2d0:	1d000001 	stcne	0, cr0, [r0, #-4]
	trice("d:_SINGLE_MAX_SIZE=%d, _BUFFER_SIZE=%d, _DEFERRED_BUFFER_SIZE=%d\n", TRICE_SINGLE_MAX_SIZE, TRICE_BUFFER_SIZE, TRICE_DEFERRED_BUFFER_SIZE);
 2d4:	04000003 	streq	r0, [r0], #-3
 2d8:	0c54027f 	lfmeq	f0, 2, [r4], {127}	@ 0x7f
 2dc:	0000012b 	andeq	r0, r0, fp, lsr #2
 2e0:	0000031d 	andeq	r0, r0, sp, lsl r3
 2e4:	58028004 	stmdapl	r2, {r2, pc}
 2e8:	0001300c 	andeq	r3, r1, ip
 2ec:	00031d00 	andeq	r1, r3, r0, lsl #26
 2f0:	02810400 	addeq	r0, r1, #0, 8
 2f4:	01350c5c 	teqeq	r5, ip, asr ip
 2f8:	031d0000 	tsteq	sp, #0
 2fc:	82040000 	andhi	r0, r4, #0
 300:	390c6002 	stmdbcc	ip, {r1, sp, lr}
 304:	1d000001 	stcne	0, cr0, [r0, #-4]
 308:	04000003 	streq	r0, [r0], #-3
 30c:	0c640283 	sfmeq	f0, 2, [r4], #-524	@ 0xfffffdf4
 310:	0000013d 	andeq	r0, r0, sp, lsr r1
 314:	0000031d 	andeq	r0, r0, sp, lsl r3
 318:	68028404 	stmdavs	r2, {r2, sl, pc}
 31c:	018a0d00 	orreq	r0, sl, r0, lsl #26
 320:	2d090000 	stccs	0, cr0, [r9, #-0]
 324:	6d000003 	stcvs	0, cr0, [r0, #-12]
 328:	03000001 	movweq	r0, #1
 32c:	0338093c 	teqeq	r8, #60, 18	@ 0xf0000
 330:	01620000 	cmneq	r2, r0
 334:	69020000 	stmdbvs	r2, {}	@ <UNPREDICTABLE>
 338:	00014f05 	andeq	r4, r1, r5, lsl #30
 33c:	0e080700 	cdpeq	7, 0, cr0, cr8, cr0, {0}
 340:	00000000 	andeq	r0, r0, r0
 344:	00000018 	andeq	r0, r0, r8, lsl r0
 348:	01975701 	orrseq	r5, r7, r1, lsl #14
 34c:	08010000 	stmdaeq	r1, {}	@ <UNPREDICTABLE>
 350:	0000000f 	andeq	r0, r0, pc
 354:	0001cd00 	andeq	ip, r1, r0, lsl #26
 358:	24080100 	strcs	r0, [r8], #-256	@ 0xffffff00
 35c:	0000000a 	andeq	r0, r0, sl
 360:	00017610 	andeq	r7, r1, r0, lsl r6
 364:	02e40500 	rsceq	r0, r4, #0, 10
 368:	017d1101 	cmneq	sp, r1, lsl #2
 36c:	e4050000 	str	r0, [r5], #-0
 370:	00016802 	andeq	r6, r1, r2, lsl #16
 374:	01811100 	orreq	r1, r1, r0, lsl #2
 378:	e4050000 	str	r0, [r5], #-0
 37c:	00039002 	andeq	r9, r3, r2
 380:	86131200 	ldrhi	r1, [r3], -r0, lsl #4
 384:	05000001 	streq	r0, [r0, #-1]
 388:	018a02e5 	orreq	r0, sl, r5, ror #5
 38c:	00000000 	andeq	r0, r0, r0
 390:	00039508 	andeq	r9, r3, r8, lsl #10
 394:	003f1400 	eorseq	r1, pc, r0, lsl #8
 398:	89100000 	ldmdbhi	r0, {}	@ <UNPREDICTABLE>
 39c:	05000001 	streq	r0, [r0, #-1]
 3a0:	110102df 	ldrdne	r0, [r1, -pc]
 3a4:	0000017d 	andeq	r0, r0, sp, ror r1
 3a8:	6802df05 	stmdavs	r2, {r0, r2, r8, r9, sl, fp, ip, lr, pc}
 3ac:	11000001 	tstne	r0, r1
 3b0:	00000181 	andeq	r0, r0, r1, lsl #3
 3b4:	9002df05 	andls	sp, r2, r5, lsl #30
 3b8:	12000003 	andne	r0, r0, #3
 3bc:	00018613 	andeq	r8, r1, r3, lsl r6
 3c0:	02e00500 	rsceq	r0, r0, #0, 10
 3c4:	00000168 	andeq	r0, r0, r8, ror #2
 3c8:	90100000 	andsls	r0, r0, r0
 3cc:	05000001 	streq	r0, [r0, #-1]
 3d0:	110102da 	ldrdne	r0, [r1, -sl]
 3d4:	0000017d 	andeq	r0, r0, sp, ror r1
 3d8:	6802da05 	stmdavs	r2, {r0, r2, r9, fp, ip, lr, pc}
 3dc:	11000001 	tstne	r0, r1
 3e0:	00000181 	andeq	r0, r0, r1, lsl #3
 3e4:	9002da05 	andls	sp, r2, r5, lsl #20
 3e8:	00000003 	andeq	r0, r0, r3
 3ec:	0000000e 	andeq	r0, r0, lr
 3f0:	00027000 	andeq	r7, r2, r0
 3f4:	a5570100 	ldrbge	r0, [r7, #-256]	@ 0xffffff00
 3f8:	01000001 	tsteq	r0, r1
 3fc:	00260f0e 	eoreq	r0, r6, lr, lsl #30
 400:	01d20000 	bicseq	r0, r2, r0
 404:	0e010000 	cdpeq	0, 0, cr0, cr1, cr0, {0}
 408:	00000a29 	andeq	r0, r0, r9, lsr #20
 40c:	0003bf15 	andeq	fp, r3, r5, lsl pc
 410:	0001e500 	andeq	lr, r1, r0, lsl #10
 414:	24270100 	strtcs	r0, [r7], #-256	@ 0xffffff00
 418:	1600000a 	strne	r0, [r0], -sl
 41c:	00000000 	andeq	r0, r0, r0
 420:	00005a15 	andeq	r5, r0, r5, lsl sl
 424:	00018600 	andeq	r8, r1, r0, lsl #12
 428:	8a0f0100 	bhi	3c0830 <SomeExampleTrices+0x3c0830>
 42c:	16000001 	strne	r0, [r0], -r1
 430:	00000018 	andeq	r0, r0, r8, lsl r0
 434:	00009d15 	andeq	r9, r0, r5, lsl sp
 438:	0001e100 	andeq	lr, r1, r0, lsl #2
 43c:	630f0100 	movwvs	r0, #61696	@ 0xf100
 440:	00000001 	andeq	r0, r0, r1
 444:	00301600 	eorseq	r1, r0, r0, lsl #12
 448:	ba150000 	blt	540450 <SomeExampleTrices+0x540450>
 44c:	e3000000 	movw	r0, #0
 450:	01000001 	tsteq	r0, r1
 454:	0001680f 	andeq	r6, r1, pc, lsl #16
 458:	00481600 	subeq	r1, r8, r0, lsl #12
 45c:	75150000 	ldrvc	r0, [r5, #-0]
 460:	e1000000 	mrs	r0, (UNDEF: 0)
 464:	01000001 	tsteq	r0, r1
 468:	0001630f 	andeq	r6, r1, pc, lsl #6
 46c:	16000000 	strne	r0, [r0], -r0
 470:	00000060 	andeq	r0, r0, r0, rrx
 474:	0000d815 	andeq	sp, r0, r5, lsl r8
 478:	00018600 	andeq	r8, r1, r0, lsl #12
 47c:	8a100100 	bhi	400884 <SomeExampleTrices+0x400884>
 480:	16000001 	strne	r0, [r0], -r1
 484:	00000078 	andeq	r0, r0, r8, ror r0
 488:	0000f315 	andeq	pc, r0, r5, lsl r3	@ <UNPREDICTABLE>
 48c:	0001e100 	andeq	lr, r1, r0, lsl #2
 490:	63100100 	tstvs	r0, #0, 2
 494:	00000001 	andeq	r0, r0, r1
 498:	00901600 	addseq	r1, r0, r0, lsl #12
 49c:	5d150000 	ldcpl	0, cr0, [r5, #-0]
 4a0:	e3000001 	movw	r0, #1
 4a4:	01000001 	tsteq	r0, r1
 4a8:	00016810 	andeq	r6, r1, r0, lsl r8
 4ac:	00a81600 	adceq	r1, r8, r0, lsl #12
 4b0:	35150000 	ldrcc	r0, [r5, #-0]
 4b4:	e1000001 	tst	r0, r1
 4b8:	01000001 	tsteq	r0, r1
 4bc:	00016310 	andeq	r6, r1, r0, lsl r3
 4c0:	16000000 	strne	r0, [r0], -r0
 4c4:	000000c0 	andeq	r0, r0, r0, asr #1
 4c8:	00017b15 	andeq	r7, r1, r5, lsl fp
 4cc:	00018600 	andeq	r8, r1, r0, lsl #12
 4d0:	8a110100 	bhi	4408d8 <SomeExampleTrices+0x4408d8>
 4d4:	16000001 	strne	r0, [r0], -r1
 4d8:	000000d8 	ldrdeq	r0, [r0], -r8
 4dc:	00019615 	andeq	r9, r1, r5, lsl r6
 4e0:	0001e100 	andeq	lr, r1, r0, lsl #2
 4e4:	63110100 	tstvs	r1, #0, 2
 4e8:	00000001 	andeq	r0, r0, r1
 4ec:	00f01600 	rscseq	r1, r0, r0, lsl #12
 4f0:	00150000 	andseq	r0, r5, r0
 4f4:	e3000002 	movw	r0, #2
 4f8:	01000001 	tsteq	r0, r1
 4fc:	00016811 	andeq	r6, r1, r1, lsl r8
 500:	01081600 	tsteq	r8, r0, lsl #12
 504:	d8150000 	ldmdale	r5, {}	@ <UNPREDICTABLE>
 508:	e1000001 	tst	r0, r1
 50c:	01000001 	tsteq	r0, r1
 510:	00016311 	andeq	r6, r1, r1, lsl r3
 514:	16000000 	strne	r0, [r0], -r0
 518:	00000120 	andeq	r0, r0, r0, lsr #2
 51c:	00021e15 	andeq	r1, r2, r5, lsl lr
 520:	00018600 	andeq	r8, r1, r0, lsl #12
 524:	8a120100 	bhi	48092c <SomeExampleTrices+0x48092c>
 528:	16000001 	strne	r0, [r0], -r1
 52c:	00000140 	andeq	r0, r0, r0, asr #2
 530:	00023915 	andeq	r3, r2, r5, lsl r9
 534:	0001e100 	andeq	lr, r1, r0, lsl #2
 538:	63120100 	tstvs	r2, #0, 2
 53c:	00000001 	andeq	r0, r0, r1
 540:	007a1700 	rsbseq	r1, sl, r0, lsl #14
 544:	00020000 	andeq	r0, r2, r0
 548:	c0180000 	andsgt	r0, r8, r0
 54c:	0001e301 	andeq	lr, r1, r1, lsl #6
 550:	68120100 	ldmdavs	r2, {r8}
 554:	17000001 	strne	r0, [r0, -r1]
 558:	0000007a 	andeq	r0, r0, sl, ror r0
 55c:	00000002 	andeq	r0, r0, r2
 560:	08710319 	ldmdaeq	r1!, {r0, r3, r4, r8, r9}^
 564:	0001e19f 	muleq	r1, pc, r1	@ <UNPREDICTABLE>
 568:	63120100 	tstvs	r2, #0, 2
 56c:	00000001 	andeq	r0, r0, r1
 570:	01581600 	cmpeq	r8, r0, lsl #12
 574:	861a0000 	ldrhi	r0, [sl], -r0
 578:	01000001 	tsteq	r0, r1
 57c:	00016813 	andeq	r6, r1, r3, lsl r8
 580:	00861700 	addeq	r1, r6, r0, lsl #14
 584:	00040000 	andeq	r0, r4, r0
 588:	03190000 	tsteq	r9, #0
 58c:	e19f0e71 	orrs	r0, pc, r1, ror lr	@ <UNPREDICTABLE>
 590:	01000001 	tsteq	r0, r1
 594:	00016313 	andeq	r6, r1, r3, lsl r3
 598:	17000000 	strne	r0, [r0, -r0]
 59c:	00000084 	andeq	r0, r0, r4, lsl #1
 5a0:	00000002 	andeq	r0, r0, r2
 5a4:	e301c018 	movw	ip, #4120	@ 0x1018
 5a8:	01000001 	tsteq	r0, r1
 5ac:	00016813 	andeq	r6, r1, r3, lsl r8
 5b0:	00841700 	addeq	r1, r4, r0, lsl #14
 5b4:	00020000 	andeq	r0, r2, r0
 5b8:	03190000 	tsteq	r9, #0
 5bc:	e19f1071 	orrs	r1, pc, r1, ror r0	@ <UNPREDICTABLE>
 5c0:	01000001 	tsteq	r0, r1
 5c4:	00016313 	andeq	r6, r1, r3, lsl r3
 5c8:	16000000 	strne	r0, [r0], -r0
 5cc:	00000178 	andeq	r0, r0, r8, ror r1
 5d0:	0001861a 	andeq	r8, r1, sl, lsl r6
 5d4:	68140100 	ldmdavs	r4, {r8}
 5d8:	17000001 	strne	r0, [r0, -r1]
 5dc:	0000008e 	andeq	r0, r0, lr, lsl #1
 5e0:	00000004 	andeq	r0, r0, r4
 5e4:	16710319 			@ <UNDEFINED> instruction: 0x16710319
 5e8:	0001e19f 	muleq	r1, pc, r1	@ <UNPREDICTABLE>
 5ec:	63140100 	tstvs	r4, #0, 2
 5f0:	00000001 	andeq	r0, r0, r1
 5f4:	008a1700 	addeq	r1, sl, r0, lsl #14
 5f8:	00020000 	andeq	r0, r2, r0
 5fc:	c0180000 	andsgt	r0, r8, r0
 600:	0001e301 	andeq	lr, r1, r1, lsl #6
 604:	68140100 	ldmdavs	r4, {r8}
 608:	17000001 	strne	r0, [r0, -r1]
 60c:	0000008a 	andeq	r0, r0, sl, lsl #1
 610:	00000002 	andeq	r0, r0, r2
 614:	18710319 	ldmdane	r1!, {r0, r3, r4, r8, r9}^
 618:	0001e19f 	muleq	r1, pc, r1	@ <UNPREDICTABLE>
 61c:	63140100 	tstvs	r4, #0, 2
 620:	00000001 	andeq	r0, r0, r1
 624:	01901600 	orrseq	r1, r0, r0, lsl #12
 628:	861a0000 	ldrhi	r0, [sl], -r0
 62c:	01000001 	tsteq	r0, r1
 630:	00016815 	andeq	r6, r1, r5, lsl r8
 634:	00921700 	addseq	r1, r2, r0, lsl #14
 638:	00020000 	andeq	r0, r2, r0
 63c:	03190000 	tsteq	r9, #0
 640:	e19f1e71 	orrs	r1, pc, r1, ror lr	@ <UNPREDICTABLE>
 644:	01000001 	tsteq	r0, r1
 648:	00016315 	andeq	r6, r1, r5, lsl r3
 64c:	17000000 	strne	r0, [r0, -r0]
 650:	0000008c 	andeq	r0, r0, ip, lsl #1
 654:	00000002 	andeq	r0, r0, r2
 658:	e301c018 	movw	ip, #4120	@ 0x1018
 65c:	01000001 	tsteq	r0, r1
 660:	00016815 	andeq	r6, r1, r5, lsl r8
 664:	008c1700 	addeq	r1, ip, r0, lsl #14
 668:	00020000 	andeq	r0, r2, r0
 66c:	03190000 	tsteq	r9, #0
 670:	e19f2071 	orrs	r2, pc, r1, ror r0	@ <UNPREDICTABLE>
 674:	01000001 	tsteq	r0, r1
 678:	00016315 	andeq	r6, r1, r5, lsl r3
 67c:	16000000 	strne	r0, [r0], -r0
 680:	000001a8 	andeq	r0, r0, r8, lsr #3
 684:	0001861a 	andeq	r8, r1, sl, lsl r6
 688:	68160100 	ldmdavs	r6, {r8}
 68c:	17000001 	strne	r0, [r0, -r1]
 690:	000000b6 	strheq	r0, [r0], -r6
 694:	00000002 	andeq	r0, r0, r2
 698:	26710319 			@ <UNDEFINED> instruction: 0x26710319
 69c:	0001e19f 	muleq	r1, pc, r1	@ <UNPREDICTABLE>
 6a0:	63160100 	tstvs	r6, #0, 2
 6a4:	00000001 	andeq	r0, r0, r1
 6a8:	00b41700 	adcseq	r1, r4, r0, lsl #14
 6ac:	00020000 	andeq	r0, r2, r0
 6b0:	c0180000 	andsgt	r0, r8, r0
 6b4:	0001e301 	andeq	lr, r1, r1, lsl #6
 6b8:	68160100 	ldmdavs	r6, {r8}
 6bc:	17000001 	strne	r0, [r0, -r1]
 6c0:	000000b4 	strheq	r0, [r0], -r4
 6c4:	00000002 	andeq	r0, r0, r2
 6c8:	28710319 	ldmdacs	r1!, {r0, r3, r4, r8, r9}^
 6cc:	0001e19f 	muleq	r1, pc, r1	@ <UNPREDICTABLE>
 6d0:	63160100 	tstvs	r6, #0, 2
 6d4:	00000001 	andeq	r0, r0, r1
 6d8:	01c01600 	biceq	r1, r0, r0, lsl #12
 6dc:	a3150000 	tstge	r5, #0
 6e0:	e3000002 	movw	r0, #2
 6e4:	01000001 	tsteq	r0, r1
 6e8:	0001681a 	andeq	r6, r1, sl, lsl r8
 6ec:	01d81600 	bicseq	r1, r8, r0, lsl #12
 6f0:	7b150000 	blvc	5406f8 <SomeExampleTrices+0x5406f8>
 6f4:	e1000002 	tst	r0, r2
 6f8:	01000001 	tsteq	r0, r1
 6fc:	0001631a 	andeq	r6, r1, sl, lsl r3
 700:	17000000 	strne	r0, [r0, -r0]
 704:	000000a0 	andeq	r0, r0, r0, lsr #1
 708:	00000002 	andeq	r0, r0, r2
 70c:	36710319 			@ <UNDEFINED> instruction: 0x36710319
 710:	0001e19f 	muleq	r1, pc, r1	@ <UNPREDICTABLE>
 714:	631a0100 	tstvs	sl, #0, 2
 718:	00000001 	andeq	r0, r0, r1
 71c:	0000a217 	andeq	sl, r0, r7, lsl r2
 720:	00000200 	andeq	r0, r0, r0, lsl #4
 724:	01c01800 	biceq	r1, r0, r0, lsl #16
 728:	000001e3 	andeq	r0, r0, r3, ror #3
 72c:	01681901 	cmneq	r8, r1, lsl #18
 730:	a2170000 	andsge	r0, r7, #0
 734:	02000000 	andeq	r0, r0, #0
 738:	19000000 	stmdbne	r0, {}	@ <UNPREDICTABLE>
 73c:	9f347103 	svcls	0x00347103
 740:	000001e1 	andeq	r0, r0, r1, ror #3
 744:	01631901 	cmneq	r3, r1, lsl #18
 748:	00000000 	andeq	r0, r0, r0
 74c:	0000a417 	andeq	sl, r0, r7, lsl r4
 750:	00000400 	andeq	r0, r0, r0, lsl #8
 754:	71031900 	tstvc	r3, r0, lsl #18
 758:	01e19f32 	mvneq	r9, r2, lsr pc
 75c:	19010000 	stmdbne	r1, {}	@ <UNPREDICTABLE>
 760:	00000163 	andeq	r0, r0, r3, ror #2
 764:	00a81700 	adceq	r1, r8, r0, lsl #14
 768:	00020000 	andeq	r0, r2, r0
 76c:	c0180000 	andsgt	r0, r8, r0
 770:	0001e301 	andeq	lr, r1, r1, lsl #6
 774:	68180100 	ldmdavs	r8, {r8}
 778:	17000001 	strne	r0, [r0, -r1]
 77c:	000000a8 	andeq	r0, r0, r8, lsr #1
 780:	00000002 	andeq	r0, r0, r2
 784:	30710319 	rsbscc	r0, r1, r9, lsl r3
 788:	0001e19f 	muleq	r1, pc, r1	@ <UNPREDICTABLE>
 78c:	63180100 	tstvs	r8, #0, 2
 790:	00000001 	andeq	r0, r0, r1
 794:	00aa1700 	adceq	r1, sl, r0, lsl #14
 798:	00040000 	andeq	r0, r4, r0
 79c:	03190000 	tsteq	r9, #0
 7a0:	e19f2e71 	orrs	r2, pc, r1, ror lr	@ <UNPREDICTABLE>
 7a4:	01000001 	tsteq	r0, r1
 7a8:	00016318 	andeq	r6, r1, r8, lsl r3
 7ac:	ae170000 	cdpge	0, 1, cr0, cr7, cr0, {0}
 7b0:	02000000 	andeq	r0, r0, #0
 7b4:	18000000 	stmdane	r0, {}	@ <UNPREDICTABLE>
 7b8:	01e301c0 	mvneq	r0, r0, asr #3
 7bc:	17010000 	strne	r0, [r1, -r0]
 7c0:	00000168 	andeq	r0, r0, r8, ror #2
 7c4:	0000ae17 	andeq	sl, r0, r7, lsl lr
 7c8:	00000200 	andeq	r0, r0, r0, lsl #4
 7cc:	71031900 	tstvc	r3, r0, lsl #18
 7d0:	01e19f2c 	mvneq	r9, ip, lsr #30
 7d4:	17010000 	strne	r0, [r1, -r0]
 7d8:	00000163 	andeq	r0, r0, r3, ror #2
 7dc:	b0170000 	andslt	r0, r7, r0
 7e0:	04000000 	streq	r0, [r0], #-0
 7e4:	19000000 	stmdbne	r0, {}	@ <UNPREDICTABLE>
 7e8:	9f2a7103 	svcls	0x002a7103
 7ec:	000001e1 	andeq	r0, r0, r1, ror #3
 7f0:	01631701 	cmneq	r3, r1, lsl #14
 7f4:	1b000000 	blne	7fc <.debug_info+0x7fc>
 7f8:	00000360 	andeq	r0, r0, r0, ror #6
 7fc:	000000be 	strheq	r0, [r0], -lr
 800:	0000001e 	andeq	r0, r0, lr, lsl r0
 804:	1c021b01 			@ <UNDEFINED> instruction: 0x1c021b01
 808:	03697fe4 	cmneq	r9, #228, 30	@ 0x390
 80c:	be170000 	cdplt	0, 1, cr0, cr7, cr0, {0}
 810:	1e000000 	cdpne	0, 0, cr0, cr0, cr0, {0}
 814:	1d000000 	stcne	0, cr0, [r0, #-0]
 818:	000002c1 	andeq	r0, r0, r1, asr #5
 81c:	00000382 	andeq	r0, r0, r2, lsl #7
 820:	601b0000 	andsvs	r0, fp, r0
 824:	dc000003 	stcle	0, cr0, [r0], {3}
 828:	1a000000 	bne	830 <.debug_info+0x830>
 82c:	01000000 	mrseq	r0, (UNDEF: 0)
 830:	e31c021c 	tst	ip, #28, 4	@ 0xc0000001
 834:	0003697f 	andeq	r6, r3, pc, ror r9
 838:	00dc1700 	sbcseq	r1, ip, r0, lsl #14
 83c:	001a0000 	andseq	r0, sl, r0
 840:	dc1d0000 	ldcle	0, cr0, [sp], {-0}
 844:	82000002 	andhi	r0, r0, #2
 848:	00000003 	andeq	r0, r0, r3
 84c:	03601b00 	cmneq	r0, #0, 22
 850:	00f60000 	rscseq	r0, r6, r0
 854:	001c0000 	andseq	r0, ip, r0
 858:	1d010000 	stcne	0, cr0, [r1, #-0]
 85c:	7fe21c02 	svcvc	0x00e21c02
 860:	00000369 	andeq	r0, r0, r9, ror #6
 864:	0000f617 	andeq	pc, r0, r7, lsl r6	@ <UNPREDICTABLE>
 868:	00001c00 	andeq	r1, r0, r0, lsl #24
 86c:	02f71d00 	rscseq	r1, r7, #0, 26
 870:	03820000 	orreq	r0, r2, #0
 874:	00000000 	andeq	r0, r0, r0
 878:	0003601b 	andeq	r6, r3, fp, lsl r0
 87c:	00011200 	andeq	r1, r1, r0, lsl #4
 880:	00001600 	andeq	r1, r0, r0, lsl #12
 884:	021e0100 	andseq	r0, lr, #0, 2
 888:	697fe11c 	ldmdbvs	pc!, {r2, r3, r4, r8, sp, lr, pc}^	@ <UNPREDICTABLE>
 88c:	17000003 	strne	r0, [r0, -r3]
 890:	00000112 	andeq	r0, r0, r2, lsl r1
 894:	00000016 	andeq	r0, r0, r6, lsl r0
 898:	0003121d 	andeq	r1, r3, sp, lsl r2
 89c:	00038200 	andeq	r8, r3, r0, lsl #4
 8a0:	1b000000 	blne	8a8 <.debug_info+0x8a8>
 8a4:	0000039a 	muleq	r0, sl, r3
 8a8:	00000128 	andeq	r0, r0, r8, lsr #2
 8ac:	0000000c 	andeq	r0, r0, ip
 8b0:	1c021f01 	stcne	15, cr1, [r2], {1}
 8b4:	03a37fe0 			@ <UNDEFINED> instruction: 0x03a37fe0
 8b8:	28170000 	ldmdacs	r7, {}	@ <UNPREDICTABLE>
 8bc:	0c000001 	stceq	0, cr0, [r0], {1}
 8c0:	1d000000 	stcne	0, cr0, [r0, #-0]
 8c4:	0000032d 	andeq	r0, r0, sp, lsr #6
 8c8:	000003bc 			@ <UNDEFINED> instruction: 0x000003bc
 8cc:	9a1b0000 	bls	6c08d4 <SomeExampleTrices+0x6c08d4>
 8d0:	34000003 	strcc	r0, [r0], #-3
 8d4:	0c000001 	stceq	0, cr0, [r0], {1}
 8d8:	01000000 	mrseq	r0, (UNDEF: 0)
 8dc:	df1c0220 	svcle	0x001c0220
 8e0:	0003a37f 	andeq	sl, r3, pc, ror r3
 8e4:	01341700 	teqeq	r4, r0, lsl #14
 8e8:	000c0000 	andeq	r0, ip, r0
 8ec:	4a1d0000 	bmi	7408f4 <SomeExampleTrices+0x7408f4>
 8f0:	bc000003 	stclt	0, cr0, [r0], {3}
 8f4:	00000003 	andeq	r0, r0, r3
 8f8:	039a1b00 	orrseq	r1, sl, #0, 22
 8fc:	01400000 	mrseq	r0, (UNDEF: 64)
 900:	000c0000 	andeq	r0, ip, r0
 904:	21010000 	mrscs	r0, (UNDEF: 1)
 908:	7fde1c02 	svcvc	0x00de1c02
 90c:	000003a3 	andeq	r0, r0, r3, lsr #7
 910:	00014017 	andeq	r4, r1, r7, lsl r0
 914:	00000c00 	andeq	r0, r0, r0, lsl #24
 918:	03671d00 	cmneq	r7, #0, 26
 91c:	03bc0000 			@ <UNDEFINED> instruction: 0x03bc0000
 920:	00000000 	andeq	r0, r0, r0
 924:	0003ca1e 	andeq	ip, r3, lr, lsl sl
 928:	0001f000 	andeq	pc, r1, r0
 92c:	02260100 	eoreq	r0, r6, #0, 2
 930:	d37fd91c 	cmnle	pc, #28, 18	@ 0x70000
 934:	00000003 	andeq	r0, r0, r3
 938:	00039a1e 	andeq	r9, r3, lr, lsl sl
 93c:	00020800 	andeq	r0, r2, r0, lsl #16
 940:	02220100 	eoreq	r0, r2, #0, 2
 944:	a37fdd1c 	cmnge	pc, #28, 26	@ 0x700
 948:	16000003 	strne	r0, [r0], -r3
 94c:	00000220 	andeq	r0, r0, r0, lsr #4
 950:	0003841d 	andeq	r8, r3, sp, lsl r4
 954:	0003bc00 	andeq	fp, r3, r0, lsl #24
 958:	1e000000 	cdpne	0, 0, cr0, cr0, cr0, {0}
 95c:	000003ca 	andeq	r0, r0, sl, asr #7
 960:	00000238 	andeq	r0, r0, r8, lsr r2
 964:	1c022301 	stcne	3, cr2, [r2], {1}
 968:	03d37fdc 	bicseq	r7, r3, #220, 30	@ 0x370
 96c:	1e000000 	cdpne	0, 0, cr0, cr0, cr0, {0}
 970:	000003ca 	andeq	r0, r0, sl, asr #7
 974:	00000250 	andeq	r0, r0, r0, asr r2
 978:	1c022401 	cfstrsne	mvf2, [r2], {1}
 97c:	03d37fdb 	bicseq	r7, r3, #876	@ 0x36c
 980:	1e000000 	cdpne	0, 0, cr0, cr0, cr0, {0}
 984:	000003ca 	andeq	r0, r0, sl, asr #7
 988:	00000268 	andeq	r0, r0, r8, ror #4
 98c:	1f022501 	svcne	0x00022501
 990:	000003a1 	andeq	r0, r0, r1, lsr #7
 994:	000003d3 	ldrdeq	r0, [r0], -r3
 998:	039a1b00 	orrseq	r1, sl, #0, 22
 99c:	01a00000 	moveq	r0, r0
 9a0:	001a0000 	andseq	r0, sl, r0
 9a4:	2c010000 	stccs	0, cr0, [r1], {-0}
 9a8:	03e51f02 	mvneq	r1, #2, 30
 9ac:	03a30000 			@ <UNDEFINED> instruction: 0x03a30000
 9b0:	a0170000 	andsge	r0, r7, r0
 9b4:	1a000001 	bne	9c0 <.debug_info+0x9c0>
 9b8:	1d000000 	stcne	0, cr0, [r0, #-0]
 9bc:	00000403 	andeq	r0, r0, r3, lsl #8
 9c0:	000003bc 			@ <UNDEFINED> instruction: 0x000003bc
 9c4:	ea170000 	b	5c09cc <SomeExampleTrices+0x5c09cc>
 9c8:	1a000001 	bne	9d4 <.debug_info+0x9d4>
 9cc:	15000000 	strne	r0, [r0, #-0]
 9d0:	00000420 	andeq	r0, r0, r0, lsr #8
 9d4:	000001ed 	andeq	r0, r0, sp, ror #3
 9d8:	0a293101 	beq	a4cde4 <SomeExampleTrices+0xa4cde4>
 9dc:	00000000 	andeq	r0, r0, r0
 9e0:	0000000e 	andeq	r0, r0, lr
 9e4:	00005400 	andeq	r5, r0, r0, lsl #8
 9e8:	b7570100 	ldrblt	r0, [r7, -r0, lsl #2]
 9ec:	01000001 	tsteq	r0, r1
 9f0:	03ca1b37 	biceq	r1, sl, #56320	@ 0xdc00
 9f4:	001a0000 	andseq	r0, sl, r0
 9f8:	00080000 	andeq	r0, r8, r0
 9fc:	41010000 	mrsmi	r0, (UNDEF: 1)
 a00:	043d1f02 	ldrteq	r1, [sp], #-3842	@ 0xfffff0fe
 a04:	03d30000 	bicseq	r0, r3, #0
 a08:	1b000000 	blne	a10 <.debug_info+0xa10>
 a0c:	000003ca 	andeq	r0, r0, sl, asr #7
 a10:	00000022 	andeq	r0, r0, r2, lsr #32
 a14:	00000006 	andeq	r0, r0, r6
 a18:	1c024801 	stcne	8, cr4, [r2], {1}
 a1c:	03d37fc8 	bicseq	r7, r3, #200, 30	@ 0x320
 a20:	00000000 	andeq	r0, r0, r0
 a24:	00003f08 	andeq	r3, r0, r8, lsl #30
 a28:	01dd0500 	bicseq	r0, sp, r0, lsl #10
 a2c:	04050000 	streq	r0, [r5], #-0
	...

Disassembly of section .debug_ranges:

00000000 <.debug_ranges>:
void TriceHeadLine(char* name) {
   0:	00000008 	andeq	r0, r0, r8
   4:	00000014 	andeq	r0, r0, r4, lsl r0
	TriceS("w: Hello! 👋🙂\n\n        ✨✨✨✨✨✨✨✨✨✨✨✨✨✨✨✨✨        \n        🎈🎈🎈🎈%s🎈🎈🎈🎈\n        🍃🍃🍃🍃🍃🍃🍃🍃🍃🍃🍃🍃🍃🍃🍃🍃🍃        \n\n\n", name);
   8:	00000016 	andeq	r0, r0, r6, lsl r0
   c:	00000024 	andeq	r0, r0, r4, lsr #32
	...
  18:	0000000c 	andeq	r0, r0, ip
  1c:	00000014 	andeq	r0, r0, r4, lsl r0
void SomeExampleTrices(int burstCount) {
  20:	00000016 	andeq	r0, r0, r6, lsl r0
  24:	00000024 	andeq	r0, r0, r4, lsr #32
	...
  30:	00000014 	andeq	r0, r0, r4, lsl r0
	TRICE(ID(0), "att:🐁 Speedy Gonzales A  32-bit time stamp\n");
  34:	00000016 	andeq	r0, r0, r6, lsl r0
  38:	00000024 	andeq	r0, r0, r4, lsr #32
  3c:	00000028 	andeq	r0, r0, r8, lsr #32
	...
	TRICE(ID(0), "att:🐁 Speedy Gonzales B  32-bit time stamp\n");
  48:	00000014 	andeq	r0, r0, r4, lsl r0
  4c:	00000016 	andeq	r0, r0, r6, lsl r0
  50:	00000024 	andeq	r0, r0, r4, lsr #32
  54:	00000028 	andeq	r0, r0, r8, lsr #32
	...
	TRICE(ID(0), "att:🐁 Speedy Gonzales C  32-bit time stamp\n");
  60:	00000028 	andeq	r0, r0, r8, lsr #32
  64:	00000030 	andeq	r0, r0, r0, lsr r0
  68:	00000032 	andeq	r0, r0, r2, lsr r0
  6c:	0000003c 	andeq	r0, r0, ip, lsr r0
	...
	TRICE(ID(0), "att:🐁 Speedy Gonzales D  32-bit time stamp\n");
  78:	0000002e 	andeq	r0, r0, lr, lsr #32
  7c:	00000030 	andeq	r0, r0, r0, lsr r0
  80:	00000032 	andeq	r0, r0, r2, lsr r0
  84:	0000003c 	andeq	r0, r0, ip, lsr r0
	...
	TRICE(Id(0), "att:🐁 Speedy Gonzales F  16-bit time stamp\n");
  90:	00000030 	andeq	r0, r0, r0, lsr r0
	TRICE(Id(0), "att:🐁 Speedy Gonzales G  16-bit time stamp\n");
  94:	00000032 	andeq	r0, r0, r2, lsr r0
  98:	0000003c 	andeq	r0, r0, ip, lsr r0
	TRICE(ID(0), "att:🐁 Speedy Gonzales D  32-bit time stamp\n");
  9c:	00000040 	andeq	r0, r0, r0, asr #32
	...
	TRICE(Id(0), "att:🐁 Speedy Gonzales E  16-bit time stamp\n");
  a8:	00000030 	andeq	r0, r0, r0, lsr r0
	TRICE(Id(0), "att:🐁 Speedy Gonzales G  16-bit time stamp\n");
  ac:	00000032 	andeq	r0, r0, r2, lsr r0
	TRICE(Id(0), "att:🐁 Speedy Gonzales F  16-bit time stamp\n");
  b0:	0000003c 	andeq	r0, r0, ip, lsr r0
	TRICE(Id(0), "att:🐁 Speedy Gonzales H  16-bit time stamp\n");
  b4:	00000040 	andeq	r0, r0, r0, asr #32
	...
	TRICE(id(0), "att:🐁 Speedy Gonzales L without time stamp\n");
  c0:	00000040 	andeq	r0, r0, r0, asr #32
	TRICE(id(0), "att:🐁 Speedy Gonzales K without time stamp\n");
  c4:	00000048 	andeq	r0, r0, r8, asr #32
	TRICE(id(0), "att:🐁 Speedy Gonzales J without time stamp\n");
  c8:	0000004a 	andeq	r0, r0, sl, asr #32
  cc:	00000054 	andeq	r0, r0, r4, asr r0
	...
	TRICE(id(0), "att:🐁 Speedy Gonzales L without time stamp\n");
  d8:	00000046 	andeq	r0, r0, r6, asr #32
  dc:	00000048 	andeq	r0, r0, r8, asr #32
	TRice32m_0(tid);
  e0:	0000004a 	andeq	r0, r0, sl, asr #32
  e4:	00000054 	andeq	r0, r0, r4, asr r0
	...
  f0:	00000048 	andeq	r0, r0, r8, asr #32
  f4:	0000004a 	andeq	r0, r0, sl, asr #32
  f8:	00000054 	andeq	r0, r0, r4, asr r0
  fc:	00000058 	andeq	r0, r0, r8, asr r0
	...
 108:	00000048 	andeq	r0, r0, r8, asr #32
 10c:	0000004a 	andeq	r0, r0, sl, asr #32
 110:	00000054 	andeq	r0, r0, r4, asr r0
 114:	00000058 	andeq	r0, r0, r8, asr r0
	...
 120:	00000058 	andeq	r0, r0, r8, asr r0
 124:	0000005e 	andeq	r0, r0, lr, asr r0
 128:	00000060 	andeq	r0, r0, r0, rrx
 12c:	00000068 	andeq	r0, r0, r8, rrx
 130:	0000007c 	andeq	r0, r0, ip, ror r0
 134:	00000084 	andeq	r0, r0, r4, lsl #1
	...
 140:	00000060 	andeq	r0, r0, r0, rrx
 144:	00000068 	andeq	r0, r0, r8, rrx
	Trice32m_0(tid);
 148:	0000007c 	andeq	r0, r0, ip, ror r0
 14c:	00000084 	andeq	r0, r0, r4, lsl #1
	...
 158:	0000005e 	andeq	r0, r0, lr, asr r0
 15c:	00000060 	andeq	r0, r0, r0, rrx
 160:	00000068 	andeq	r0, r0, r8, rrx
 164:	0000006c 	andeq	r0, r0, ip, rrx
 168:	00000086 	andeq	r0, r0, r6, lsl #1
	trice32m_0(tid);
 16c:	0000008a 	andeq	r0, r0, sl, lsl #1
	...
 178:	0000006c 	andeq	r0, r0, ip, rrx
 17c:	00000074 	andeq	r0, r0, r4, ror r0
	Trice32m_0(tid);
 180:	0000008e 	andeq	r0, r0, lr, lsl #1
 184:	00000092 	muleq	r0, r2, r0
	...
	trice32m_0(tid);
 190:	00000074 	andeq	r0, r0, r4, ror r0
 194:	0000007a 	andeq	r0, r0, sl, ror r0
	TriceS("rd:%s <- float number as string\n", aString);
 198:	00000092 	muleq	r0, r2, r0
 19c:	00000094 	muleq	r0, r4, r0
	...
	Trice64("msg:%.20f (double with more ciphers than precision)\n", aDouble(2.71828182845904523536));
 1a8:	00000094 	muleq	r0, r4, r0
 1ac:	0000009c 	muleq	r0, ip, r0
	Trice("msg:%.20f (float  with more ciphers than precision)\n", aFloat(2.71828182845904523536));
 1b0:	000000b6 	strheq	r0, [r0], -r6
 1b4:	000000b8 	strheq	r0, [r0], -r8
	...
	Trice32m_0(tid);
 1c0:	0000009c 	muleq	r0, ip, r0
 1c4:	000000a0 	andeq	r0, r0, r0, lsr #1
 1c8:	000000b8 	strheq	r0, [r0], -r8
 1cc:	000000be 	strheq	r0, [r0], -lr
	...
 1d8:	0000009c 	muleq	r0, ip, r0
	Trice8B("msg:%02x \n", aString, strlen(aString));
 1dc:	000000a0 	andeq	r0, r0, r0, lsr #1
 1e0:	000000b8 	strheq	r0, [r0], -r8
 1e4:	000000be 	strheq	r0, [r0], -lr
	...
	Trice32B("msg:%08x  \n", aString, strlen(aString) >> 2);
 1f0:	0000014c 	andeq	r0, r0, ip, asr #2
	Trice16F("att:ARemoteFunctionName", aString, strlen(aString) >> 1);
 1f4:	00000152 	andeq	r0, r0, r2, asr r1
 1f8:	00000174 	andeq	r0, r0, r4, ror r1
 1fc:	00000178 	andeq	r0, r0, r8, ror r1
	...
	trice("info:%d times a 16 byte long Trice messages, which not all will be written because of the TRICE_PROTECT:\n", burstCount);
 208:	00000152 	andeq	r0, r0, r2, asr r1
	for (int i = 0; i < burstCount; i++) {
 20c:	00000156 	andeq	r0, r0, r6, asr r1
 210:	0000015e 	andeq	r0, r0, lr, asr r1
		Trice("i=%x %x\n", 0x44444400 + i, 0xaaaaaa00 + i);
 214:	0000016a 	andeq	r0, r0, sl, ror #2
	...
	for (int i = 0; i < burstCount; i++) {
 220:	00000152 	andeq	r0, r0, r2, asr r1
}
 224:	00000156 	andeq	r0, r0, r6, asr r1
 228:	0000015e 	andeq	r0, r0, lr, asr r1
 22c:	0000016a 	andeq	r0, r0, sl, ror #2
	...
 238:	00000156 	andeq	r0, r0, r6, asr r1
 23c:	00000158 	andeq	r0, r0, r8, asr r1
 240:	0000016a 	andeq	r0, r0, sl, ror #2
 244:	0000016c 	andeq	r0, r0, ip, ror #2
	...
 250:	00000158 	andeq	r0, r0, r8, asr r1
 254:	0000015a 	andeq	r0, r0, sl, asr r1
 258:	0000016c 	andeq	r0, r0, ip, ror #2
 25c:	00000170 	andeq	r0, r0, r0, ror r1
	...
 268:	0000015a 	andeq	r0, r0, sl, asr r1
 26c:	0000015e 	andeq	r0, r0, lr, asr r1
 270:	00000170 	andeq	r0, r0, r0, ror r1
 274:	00000174 	andeq	r0, r0, r4, ror r1
	...
 284:	00000018 	andeq	r0, r0, r8, lsl r0
 288:	00000000 	andeq	r0, r0, r0
 28c:	00000270 	andeq	r0, r0, r0, ror r2
 290:	00000000 	andeq	r0, r0, r0
 294:	00000054 	andeq	r0, r0, r4, asr r0
	...

Disassembly of section .debug_str:

00000000 <.debug_str>:
void TriceHeadLine(char* name) {
   0:	6e616c63 	cdpvs	12, 6, cr6, cr1, cr3, {3}
   4:	65762067 	ldrbvs	r2, [r6, #-103]!	@ 0xffffff99
	TriceS("w: Hello! 👋🙂\n\n        ✨✨✨✨✨✨✨✨✨✨✨✨✨✨✨✨✨        \n        🎈🎈🎈🎈%s🎈🎈🎈🎈\n        🍃🍃🍃🍃🍃🍃🍃🍃🍃🍃🍃🍃🍃🍃🍃🍃🍃        \n\n\n", name);
   8:	6f697372 	svcvs	0x00697372
   c:	3731206e 	ldrcc	r2, [r1, -lr, rrx]!
  10:	302e302e 	eorcc	r3, lr, lr, lsr #32
  14:	2f2e2e00 	svccs	0x002e2e00
  18:	6d617865 	stclvs	8, cr7, [r1, #-404]!	@ 0xfffffe6c
  1c:	44656c70 	strbtmi	r6, [r5], #-3184	@ 0xfffff390
void SomeExampleTrices(int burstCount) {
  20:	5c617461 	cfstrdpl	mvd7, [r1], #-388	@ 0xfffffe7c
  24:	63697274 	cmnvs	r9, #116, 4	@ 0x40000007
	TRICE(ID(0), "att:🐁 Speedy Gonzales A  32-bit time stamp\n");
  28:	61784565 	cmnvs	r8, r5, ror #10
  2c:	656c706d 	strbvs	r7, [ip, #-109]!	@ 0xffffff93
  30:	00632e73 	rsbeq	r2, r3, r3, ror lr
  34:	555c3a43 	ldrbpl	r3, [ip, #-2627]	@ 0xfffff5bd
  38:	73726573 	cmnvc	r2, #482344960	@ 0x1cc00000
  3c:	5c736d5c 	ldclpl	13, cr6, [r3], #-368	@ 0xfffffe90
  40:	6f706572 	svcvs	0x00706572
  44:	72745c73 	rsbsvc	r5, r4, #29440	@ 0x7300
	TRICE(ID(0), "att:🐁 Speedy Gonzales B  32-bit time stamp\n");
  48:	5f656369 	svcpl	0x00656369
  4c:	645f7477 	ldrbvs	r7, [pc], #-1143	@ 54 <.debug_str+0x54>
  50:	6c657665 	stclvs	6, cr7, [r5], #-404	@ 0xfffffe6c
  54:	6178655c 	cmnvs	r8, ip, asr r5
  58:	656c706d 	strbvs	r7, [ip, #-109]!	@ 0xffffff93
  5c:	30475c73 	subcc	r5, r7, r3, ror ip
	TRICE(ID(0), "att:🐁 Speedy Gonzales C  32-bit time stamp\n");
  60:	695f3142 	ldmdbvs	pc, {r1, r6, r8, ip, sp}^	@ <UNPREDICTABLE>
  64:	0074736e 	rsbseq	r7, r4, lr, ror #6
  68:	72616863 	rsbvc	r6, r1, #6488064	@ 0x630000
  6c:	415f5f00 	cmpmi	pc, r0, lsl #30
  70:	59415252 	stmdbpl	r1, {r1, r4, r6, r9, ip, lr}^
  74:	5a49535f 	bpl	1254df8 <SomeExampleTrices+0x1254df8>
	TRICE(ID(0), "att:🐁 Speedy Gonzales D  32-bit time stamp\n");
  78:	59545f45 	ldmdbpl	r4, {r0, r2, r6, r8, r9, sl, fp, ip, lr}^
  7c:	5f5f4550 	svcpl	0x005f4550
  80:	736e7500 	cmnvc	lr, #0, 10
  84:	656e6769 	strbvs	r6, [lr, #-1897]!	@ 0xfffff897
	TRICE(Id(0), "att:🐁 Speedy Gonzales E  16-bit time stamp\n");
  88:	68732064 	ldmdavs	r3!, {r2, r5, r6, sp}^
	TRICE(Id(0), "att:🐁 Speedy Gonzales F  16-bit time stamp\n");
  8c:	0074726f 	rsbseq	r7, r4, pc, ror #4
  90:	69755f5f 	ldmdbvs	r5!, {r0, r1, r2, r3, r4, r6, r8, r9, sl, fp, ip, lr}^
	TRICE(Id(0), "att:🐁 Speedy Gonzales G  16-bit time stamp\n");
  94:	3631746e 	ldrtcc	r7, [r1], -lr, ror #8
  98:	7500745f 	strvc	r7, [r0, #-1119]	@ 0xfffffba1
	TRICE(ID(0), "att:🐁 Speedy Gonzales D  32-bit time stamp\n");
  9c:	31746e69 	cmncc	r4, r9, ror #28
  a0:	00745f36 	rsbseq	r5, r4, r6, lsr pc
	TRICE(Id(0), "att:🐁 Speedy Gonzales E  16-bit time stamp\n");
  a4:	69736e75 	ldmdbvs	r3!, {r0, r2, r4, r5, r6, r9, sl, fp, sp, lr}^
  a8:	64656e67 	strbtvs	r6, [r5], #-3687	@ 0xfffff199
	TRICE(Id(0), "att:🐁 Speedy Gonzales G  16-bit time stamp\n");
  ac:	746e6920 	strbtvc	r6, [lr], #-2336	@ 0xfffff6e0
	TRICE(Id(0), "att:🐁 Speedy Gonzales F  16-bit time stamp\n");
  b0:	755f5f00 	ldrbvc	r5, [pc, #-3840]	@ fffff1b8 <SomeExampleTrices+0xfffff1b8>
	TRICE(Id(0), "att:🐁 Speedy Gonzales H  16-bit time stamp\n");
  b4:	33746e69 	cmncc	r4, #1680	@ 0x690
  b8:	00745f32 	rsbseq	r5, r4, r2, lsr pc
	TRICE(id(0), "att:🐁 Speedy Gonzales L without time stamp\n");
  bc:	746e6975 	strbtvc	r6, [lr], #-2421	@ 0xfffff68b
  c0:	745f3233 	ldrbvc	r3, [pc], #-563	@ c8 <.debug_str+0xc8>
	TRICE(id(0), "att:🐁 Speedy Gonzales K without time stamp\n");
  c4:	31524300 	cmpcc	r2, r0, lsl #6
	TRICE(id(0), "att:🐁 Speedy Gonzales J without time stamp\n");
  c8:	32524300 	subscc	r4, r2, #0, 6
  cc:	434d5300 	movtmi	r5, #54016	@ 0xd300
	TRICE(id(0), "att:🐁 Speedy Gonzales I without time stamp\n");
  d0:	49440052 	stmdbmi	r4, {r1, r4, r6}^
	TRICE(Id(0), "att:🐁 Speedy Gonzales H  16-bit time stamp\n");
  d4:	53005245 	movwpl	r5, #581	@ 0x245
	TRICE(id(0), "att:🐁 Speedy Gonzales L without time stamp\n");
  d8:	47450052 	smlsldmi	r0, r5, r2, r0
  dc:	43430052 	movtmi	r0, #12370	@ 0x3052
	TRice32m_0(tid);
  e0:	0031524d 	eorseq	r5, r1, sp, asr #4
  e4:	524d4343 	subpl	r4, sp, #201326593	@ 0xc000001
  e8:	43430032 	movtmi	r0, #12338	@ 0x3032
  ec:	43005245 	movwmi	r5, #581	@ 0x245
  f0:	5000544e 	andpl	r5, r0, lr, asr #8
  f4:	41004353 	tstmi	r0, r3, asr r3
  f8:	52005252 	andpl	r5, r0, #536870917	@ 0x20000005
  fc:	43005243 	movwmi	r5, #579	@ 0x243
 100:	00315243 	eorseq	r5, r1, r3, asr #4
 104:	32524343 	subscc	r4, r2, #201326593	@ 0xc000001
 108:	52434300 	subpl	r4, r3, #0, 6
 10c:	43430033 	movtmi	r0, #12339	@ 0x3033
 110:	42003452 	andmi	r3, r0, #1375731712	@ 0x52000000
 114:	00525444 	subseq	r5, r2, r4, asr #8
 118:	00524344 	subseq	r4, r2, r4, asr #6
 11c:	52414d44 	subpl	r4, r1, #68, 26	@ 0x1100
 120:	31524f00 	cmpcc	r2, r0, lsl #30
 124:	4d434300 	stclmi	3, cr4, [r3, #-0]
 128:	43003352 	movwmi	r3, #850	@ 0x352
 12c:	00355243 	eorseq	r5, r5, r3, asr #4
 130:	36524343 	ldrbcc	r4, [r2], -r3, asr #6
 134:	31464100 	mrscc	r4, (UNDEF: 86)
 138:	32464100 	subcc	r4, r6, #0, 2
 13c:	53495400 	movtpl	r5, #37888	@ 0x9400
 140:	54004c45 	strpl	r4, [r0], #-3141	@ 0xfffff3bb
 144:	545f4d49 	ldrbpl	r4, [pc], #-3401	@ 14c <.debug_str+0x14c>
	Trice32m_0(tid);
 148:	44657079 	strbtmi	r7, [r5], #-121	@ 0xffffff87
 14c:	75006665 	strvc	r6, [r0, #-1637]	@ 0xfffff99b
 150:	6769736e 	strbvs	r7, [r9, -lr, ror #6]!
 154:	2064656e 	rsbcs	r6, r4, lr, ror #10
 158:	676e6f6c 	strbvs	r6, [lr, -ip, ror #30]!
 15c:	6e6f6c20 	cdpvs	12, 6, cr6, cr15, cr0, {1}
 160:	5f5f0067 	svcpl	0x005f0067
 164:	746e6975 	strbtvc	r6, [lr], #-2421	@ 0xfffff68b
 168:	745f3436 	ldrbvc	r3, [pc], #-1078	@ 170 <.debug_str+0x170>
	trice32m_0(tid);
 16c:	6e697500 	cdpvs	5, 6, cr7, cr9, cr0, {0}
 170:	5f343674 	svcpl	0x00343674
 174:	52540074 	subspl	r0, r4, #116	@ 0x74
 178:	30656369 	rsbcc	r6, r5, r9, ror #6
 17c:	64697400 	strbtvs	r7, [r9], #-1024	@ 0xfffffc00
	Trice32m_0(tid);
 180:	6d467000 	stclvs	0, cr7, [r6, #-0]
 184:	73740074 	cmnvc	r4, #116	@ 0x74
 188:	69725400 	ldmdbvs	r2!, {sl, ip, lr}^
	trice32m_0(tid);
 18c:	00306563 	eorseq	r6, r0, r3, ror #10
 190:	63697274 	cmnvs	r9, #116, 4	@ 0x40000007
 194:	54003065 	strpl	r3, [r0], #-101	@ 0xffffff9b
	TriceS("rd:%s <- float number as string\n", aString);
 198:	65636972 	strbvs	r6, [r3, #-2418]!	@ 0xfffff68e
 19c:	64616548 	strbtvs	r6, [r1], #-1352	@ 0xfffffab8
 1a0:	656e694c 	strbvs	r6, [lr, #-2380]!	@ 0xfffff6b4
	Trice64("msg:%.20f (double with more ciphers than precision)\n", aDouble(2.71828182845904523536));
 1a4:	6d6f5300 	stclvs	3, cr5, [pc, #-0]	@ 1ac <.debug_str+0x1ac>
 1a8:	61784565 	cmnvs	r8, r5, ror #10
 1ac:	656c706d 	strbvs	r7, [ip, #-109]!	@ 0xffffff93
	Trice("msg:%.20f (float  with more ciphers than precision)\n", aFloat(2.71828182845904523536));
 1b0:	63697254 	cmnvs	r9, #84, 4	@ 0x40000005
 1b4:	4c007365 	stcmi	3, cr7, [r0], {101}	@ 0x65
	Trice("msg:%f (default rounded float)\n", aFloat(2.71828182845904523536));
 1b8:	7254676f 	subsvc	r6, r4, #29097984	@ 0x1bc0000
 1bc:	43656369 	cmnmi	r5, #-1543503871	@ 0xa4000001
	Trice32m_0(tid);
 1c0:	69666e6f 	stmdbvs	r6!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
 1c4:	61727567 	cmnvs	r2, r7, ror #10
 1c8:	6e6f6974 			@ <UNDEFINED> instruction: 0x6e6f6974
 1cc:	6d616e00 	stclvs	14, cr6, [r1, #-0]
 1d0:	75620065 	strbvc	r0, [r2, #-101]!	@ 0xffffff9b
 1d4:	43747372 	cmnmi	r4, #-939524095	@ 0xc8000001
 1d8:	746e756f 	strbtvc	r7, [lr], #-1391	@ 0xfffffa91
	Trice8B("msg:%02x \n", aString, strlen(aString));
 1dc:	746e6900 	strbtvc	r6, [lr], #-2304	@ 0xfffff700
 1e0:	76007000 	strvc	r7, [r0], -r0
 1e4:	74536100 	ldrbvc	r6, [r3], #-256	@ 0xffffff00
	Trice32B("msg:%08x  \n", aString, strlen(aString) >> 2);
 1e8:	676e6972 			@ <UNDEFINED> instruction: 0x676e6972
 1ec:	Address 0x1ec is out of bounds.


Disassembly of section .comment:

00000000 <.comment>:
void TriceHeadLine(char* name) {
   0:	616c6300 	cmnvs	ip, r0, lsl #6
   4:	7620676e 	strtvc	r6, [r0], -lr, ror #14
	TriceS("w: Hello! 👋🙂\n\n        ✨✨✨✨✨✨✨✨✨✨✨✨✨✨✨✨✨        \n        🎈🎈🎈🎈%s🎈🎈🎈🎈\n        🍃🍃🍃🍃🍃🍃🍃🍃🍃🍃🍃🍃🍃🍃🍃🍃🍃        \n\n\n", name);
   8:	69737265 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, ip, sp, lr}^
   c:	31206e6f 			@ <UNDEFINED> instruction: 0x31206e6f
  10:	2e302e37 	mrccs	14, 1, r2, cr0, cr7, {1}
  14:	Address 0x14 is out of bounds.


Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
void TriceHeadLine(char* name) {
   0:	00004241 	andeq	r4, r0, r1, asr #4
   4:	61656100 	cmnvs	r5, r0, lsl #2
	TriceS("w: Hello! 👋🙂\n\n        ✨✨✨✨✨✨✨✨✨✨✨✨✨✨✨✨✨        \n        🎈🎈🎈🎈%s🎈🎈🎈🎈\n        🍃🍃🍃🍃🍃🍃🍃🍃🍃🍃🍃🍃🍃🍃🍃🍃🍃        \n\n\n", name);
   8:	01006962 	tsteq	r0, r2, ror #18
   c:	00000038 	andeq	r0, r0, r8, lsr r0
  10:	302e3243 	eorcc	r3, lr, r3, asr #4
  14:	63050039 	movwvs	r0, #20537	@ 0x5039
  18:	6574726f 	ldrbvs	r7, [r4, #-623]!	@ 0xfffffd91
  1c:	306d2d78 	rsbcc	r2, sp, r8, ror sp
void SomeExampleTrices(int burstCount) {
  20:	73756c70 	cmnvc	r5, #112, 24	@ 0x7000
  24:	070c0600 	streq	r0, [ip, -r0, lsl #12]
	TRICE(ID(0), "att:🐁 Speedy Gonzales A  32-bit time stamp\n");
  28:	0900084d 	stmdbeq	r0, {r0, r2, r3, r6, fp}
  2c:	11000e01 	tstne	r0, r1, lsl #28
  30:	15041201 	strne	r1, [r4, #-513]	@ 0xfffffdff
  34:	18011700 	stmdane	r1, {r8, r9, sl, ip}
  38:	1a011901 	bne	46444 <SomeExampleTrices+0x46444>
  3c:	22021e01 	andcs	r1, r2, #1, 28
  40:	Address 0x40 is out of bounds.


Disassembly of section .debug_frame:

00000000 <.debug_frame>:
void TriceHeadLine(char* name) {
   0:	00000010 	andeq	r0, r0, r0, lsl r0
   4:	ffffffff 			@ <UNDEFINED> instruction: 0xffffffff
	TriceS("w: Hello! 👋🙂\n\n        ✨✨✨✨✨✨✨✨✨✨✨✨✨✨✨✨✨        \n        🎈🎈🎈🎈%s🎈🎈🎈🎈\n        🍃🍃🍃🍃🍃🍃🍃🍃🍃🍃🍃🍃🍃🍃🍃🍃🍃        \n\n\n", name);
   8:	00040004 	andeq	r0, r4, r4
   c:	0c0e7c01 	stceq	12, cr7, [lr], {1}
  10:	0000000d 	andeq	r0, r0, sp
  14:	00000018 	andeq	r0, r0, r8, lsl r0
	...
void SomeExampleTrices(int burstCount) {
  20:	00000018 	andeq	r0, r0, r8, lsl r0
  24:	8e080e42 	cdphi	14, 0, cr0, cr8, cr2, {2}
	TRICE(ID(0), "att:🐁 Speedy Gonzales A  32-bit time stamp\n");
  28:	42028701 	andmi	r8, r2, #262144	@ 0x40000
  2c:	0000070d 	andeq	r0, r0, sp, lsl #14
  30:	00000020 	andeq	r0, r0, r0, lsr #32
	...
  3c:	00000270 	andeq	r0, r0, r0, ror r2
  40:	8e140e42 	cdphi	14, 1, cr0, cr4, cr2, {2}
  44:	86028701 	strhi	r8, [r2], -r1, lsl #14
	TRICE(ID(0), "att:🐁 Speedy Gonzales B  32-bit time stamp\n");
  48:	84048503 	strhi	r8, [r4], #-1283	@ 0xfffffafd
  4c:	070c4205 	streq	r4, [ip, -r5, lsl #4]
  50:	00000008 	andeq	r0, r0, r8
  54:	00000020 	andeq	r0, r0, r0, lsr #32
	...
	TRICE(ID(0), "att:🐁 Speedy Gonzales C  32-bit time stamp\n");
  60:	00000054 	andeq	r0, r0, r4, asr r0
  64:	8e140e42 	cdphi	14, 1, cr0, cr4, cr2, {2}
  68:	86028701 	strhi	r8, [r2], -r1, lsl #14
  6c:	84048503 	strhi	r8, [r4], #-1283	@ 0xfffffafd
  70:	070c4205 	streq	r4, [ip, -r5, lsl #4]
  74:	00000008 	andeq	r0, r0, r8

Disassembly of section .debug_line:

00000000 <.debug_line>:
void TriceHeadLine(char* name) {
   0:	00000297 	muleq	r0, r7, r2
   4:	010d0004 	tsteq	sp, r4
	TriceS("w: Hello! 👋🙂\n\n        ✨✨✨✨✨✨✨✨✨✨✨✨✨✨✨✨✨        \n        🎈🎈🎈🎈%s🎈🎈🎈🎈\n        🍃🍃🍃🍃🍃🍃🍃🍃🍃🍃🍃🍃🍃🍃🍃🍃🍃        \n\n\n", name);
   8:	01010000 	mrseq	r0, (UNDEF: 1)
   c:	0d0efb01 	vstreq	d15, [lr, #-4]
  10:	01010100 	mrseq	r0, (UNDEF: 17)
  14:	00000001 	andeq	r0, r0, r1
  18:	01000001 	tsteq	r0, r1
  1c:	652f2e2e 	strvs	r2, [pc, #-3630]!	@ fffff1f6 <SomeExampleTrices+0xfffff1f6>
void SomeExampleTrices(int burstCount) {
  20:	706d6178 	rsbvc	r6, sp, r8, ror r1
  24:	6144656c 	cmpvs	r4, ip, ror #10
	TRICE(ID(0), "att:🐁 Speedy Gonzales A  32-bit time stamp\n");
  28:	43006174 	movwmi	r6, #372	@ 0x174
  2c:	69625c3a 	stmdbvs	r2!, {r1, r3, r4, r5, sl, fp, ip, lr}^
  30:	72415c6e 	subvc	r5, r1, #28160	@ 0x6e00
  34:	554e476d 	strbpl	r4, [lr, #-1901]	@ 0xfffff893
  38:	6c6f6f54 	stclvs	15, cr6, [pc], #-336	@ fffffef0 <SomeExampleTrices+0xfffffef0>
  3c:	69616863 	stmdbvs	r1!, {r0, r1, r5, r6, fp, sp, lr}^
  40:	72615c6e 	rsbvc	r5, r1, #28160	@ 0x6e00
  44:	6f6e2d6d 	svcvs	0x006e2d6d
	TRICE(ID(0), "att:🐁 Speedy Gonzales B  32-bit time stamp\n");
  48:	652d656e 	strvs	r6, [sp, #-1390]!	@ 0xfffffa92
  4c:	5c696261 	sfmpl	f6, 2, [r9], #-388	@ 0xfffffe7c
  50:	6c636e69 	stclvs	14, cr6, [r3], #-420	@ 0xfffffe5c
  54:	5c656475 	cfstrdpl	mvd6, [r5], #-468	@ 0xfffffe2c
  58:	6863616d 	stmdavs	r3!, {r0, r2, r3, r5, r6, r8, sp, lr}^
  5c:	00656e69 	rsbeq	r6, r5, r9, ror #28
	TRICE(ID(0), "att:🐁 Speedy Gonzales C  32-bit time stamp\n");
  60:	625c3a43 	subsvs	r3, ip, #274432	@ 0x43000
  64:	415c6e69 	cmpmi	ip, r9, ror #28
  68:	4e476d72 	mcrmi	13, 2, r6, cr7, cr2, {3}
  6c:	6f6f5455 	svcvs	0x006f5455
  70:	6168636c 	cmnvs	r8, ip, ror #6
  74:	615c6e69 	cmpvs	ip, r9, ror #28
	TRICE(ID(0), "att:🐁 Speedy Gonzales D  32-bit time stamp\n");
  78:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
  7c:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	@ 0xfffffe44
  80:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
  84:	636e695c 	cmnvs	lr, #92, 18	@ 0x170000
	TRICE(Id(0), "att:🐁 Speedy Gonzales E  16-bit time stamp\n");
  88:	6564756c 	strbvs	r7, [r4, #-1388]!	@ 0xfffffa94
	TRICE(Id(0), "att:🐁 Speedy Gonzales F  16-bit time stamp\n");
  8c:	7379735c 	cmnvc	r9, #92, 6	@ 0x70000001
  90:	69724400 	ldmdbvs	r2!, {sl, lr}^
	TRICE(Id(0), "att:🐁 Speedy Gonzales G  16-bit time stamp\n");
  94:	73726576 	cmnvc	r2, #494927872	@ 0x1d800000
  98:	534d432f 	movtpl	r4, #54063	@ 0xd32f
	TRICE(ID(0), "att:🐁 Speedy Gonzales D  32-bit time stamp\n");
  9c:	442f5349 	strtmi	r5, [pc], #-841	@ a4 <.debug_line+0xa4>
  a0:	63697665 	cmnvs	r9, #105906176	@ 0x6500000
	TRICE(Id(0), "att:🐁 Speedy Gonzales E  16-bit time stamp\n");
  a4:	54532f65 	ldrbpl	r2, [r3], #-3941	@ 0xfffff09b
  a8:	4d54532f 	ldclmi	3, cr5, [r4, #-188]	@ 0xffffff44
	TRICE(Id(0), "att:🐁 Speedy Gonzales G  16-bit time stamp\n");
  ac:	30473233 	subcc	r3, r7, r3, lsr r2
	TRICE(Id(0), "att:🐁 Speedy Gonzales F  16-bit time stamp\n");
  b0:	492f7878 	stmdbmi	pc!, {r3, r4, r5, r6, fp, ip, sp, lr}	@ <UNPREDICTABLE>
	TRICE(Id(0), "att:🐁 Speedy Gonzales H  16-bit time stamp\n");
  b4:	756c636e 	strbvc	r6, [ip, #-878]!	@ 0xfffffc92
  b8:	2e006564 	cfsh32cs	mvfx6, mvfx0, #52
	TRICE(id(0), "att:🐁 Speedy Gonzales L without time stamp\n");
  bc:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
  c0:	6372732f 	cmnvs	r2, #-1140850688	@ 0xbc000000
	TRICE(id(0), "att:🐁 Speedy Gonzales K without time stamp\n");
  c4:	72740000 	rsbsvc	r0, r4, #0
	TRICE(id(0), "att:🐁 Speedy Gonzales J without time stamp\n");
  c8:	45656369 	strbmi	r6, [r5, #-873]!	@ 0xfffffc97
  cc:	706d6178 	rsbvc	r6, sp, r8, ror r1
	TRICE(id(0), "att:🐁 Speedy Gonzales I without time stamp\n");
  d0:	2e73656c 	cdpcs	5, 7, cr6, cr3, cr12, {3}
	TRICE(Id(0), "att:🐁 Speedy Gonzales H  16-bit time stamp\n");
  d4:	00010063 	andeq	r0, r1, r3, rrx
	TRICE(id(0), "att:🐁 Speedy Gonzales L without time stamp\n");
  d8:	65645f00 	strbvs	r5, [r4, #-3840]!	@ 0xfffff100
  dc:	6c756166 	ldfvse	f6, [r5], #-408	@ 0xfffffe68
	TRice32m_0(tid);
  e0:	79745f74 	ldmdbvc	r4!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
  e4:	2e736570 	mrccs	5, 3, r6, cr3, cr0, {3}
  e8:	00020068 	andeq	r0, r2, r8, rrx
  ec:	74735f00 	ldrbtvc	r5, [r3], #-3840	@ 0xfffff100
  f0:	746e6964 	strbtvc	r6, [lr], #-2404	@ 0xfffff69c
  f4:	0300682e 	movweq	r6, #2094	@ 0x82e
  f8:	74730000 	ldrbtvc	r0, [r3], #-0
  fc:	6732336d 	ldrvs	r3, [r2, -sp, ror #6]!
 100:	78316230 	ldmdavc	r1!, {r4, r5, r9, sp, lr}
 104:	00682e78 	rsbeq	r2, r8, r8, ror lr
 108:	74000004 	strvc	r0, [r0], #-4
 10c:	65636972 	strbvs	r6, [r3, #-2418]!	@ 0xfffff68e
 110:	0500682e 	streq	r6, [r0, #-2094]	@ 0xfffff7d2
 114:	00000000 	andeq	r0, r0, r0
 118:	00000205 	andeq	r0, r0, r5, lsl #4
 11c:	05190000 	ldreq	r0, [r9, #-0]
 120:	05840a02 	streq	r0, [r4, #2562]	@ 0xa02
 124:	06670b01 	strbteq	r0, [r7], -r1, lsl #22
 128:	022e7503 	eoreq	r7, lr, #12582912	@ 0xc00000
 12c:	01010008 	tsteq	r1, r8
 130:	00020500 	andeq	r0, r2, r0, lsl #10
 134:	03000000 	movweq	r0, #0
 138:	0205010d 	andeq	r0, r5, #1073741827	@ 0x40000003
 13c:	4a06830a 	bmi	1a0d6c <SomeExampleTrices+0x1a0d6c>
 140:	034a7103 	movteq	r7, #41219	@ 0xa103
 144:	032e4a0f 			@ <UNDEFINED> instruction: 0x032e4a0f
	Trice32m_0(tid);
 148:	0f038271 	svceq	0x00038271
 14c:	4b064a2e 	blmi	192a0c <SomeExampleTrices+0x192a0c>
 150:	4a700306 	bmi	1c00d70 <SomeExampleTrices+0x1c00d70>
 154:	2e2e1003 	cdpcs	0, 2, cr1, cr14, cr3, {0}
 158:	4b069e2e 	blmi	1a7a18 <SomeExampleTrices+0x1a7a18>
 15c:	4a6f0306 	bmi	1bc0d7c <SomeExampleTrices+0x1bc0d7c>
 160:	2e2e1103 	sufcse	f1, f6, f3
 164:	4b069e2e 	blmi	1a7a24 <SomeExampleTrices+0x1a7a24>
 168:	4a6e0306 	bmi	1b80d88 <SomeExampleTrices+0x1b80d88>
	trice32m_0(tid);
 16c:	2e130306 	cdpcs	3, 1, cr0, cr3, cr6, {0}
 170:	6e03062d 	cfmadd32vs	mvax1, mvfx0, mvfx3, mvfx13
 174:	13030666 	movwne	r0, #13926	@ 0x3666
 178:	66064b2e 	strvs	r4, [r6], -lr, lsr #22
 17c:	4a062f06 	bmi	18bd9c <SomeExampleTrices+0x18bd9c>
	Trice32m_0(tid);
 180:	2e062b06 	vmlacs.f64	d2, d6, d6
 184:	2e068306 	cdpcs	3, 0, cr8, cr6, cr6, {0}
 188:	2d2f4b06 	vstmdbcs	pc!, {d4-d6}
	trice32m_0(tid);
 18c:	66062f4b 	strvs	r2, [r6], -fp, asr #30
 190:	4a063206 	bmi	18c9b0 <SomeExampleTrices+0x18c9b0>
 194:	2e062d06 	cdpcs	13, 0, cr2, cr6, cr6, {0}
	TriceS("rd:%s <- float number as string\n", aString);
 198:	2e064906 	vmlacs.f16	s8, s12, s12	@ <UNPREDICTABLE>
 19c:	2e064906 	vmlacs.f16	s8, s12, s12	@ <UNPREDICTABLE>
 1a0:	2e064906 	vmlacs.f16	s8, s12, s12	@ <UNPREDICTABLE>
	Trice64("msg:%.20f (double with more ciphers than precision)\n", aDouble(2.71828182845904523536));
 1a4:	03063206 	movweq	r3, #25094	@ 0x6206
 1a8:	1a032e66 	bne	cbb48 <SomeExampleTrices+0xcbb48>
 1ac:	0605042e 	streq	r0, [r5], -lr, lsr #8
	Trice("msg:%.20f (float  with more ciphers than precision)\n", aFloat(2.71828182845904523536));
 1b0:	2e05cb03 	vmlacs.f64	d12, d5, d3
 1b4:	d62e4a06 	strtle	r4, [lr], -r6, lsl #20
	Trice("msg:%f (default rounded float)\n", aFloat(2.71828182845904523536));
 1b8:	2e7a9b03 	vaddcs.f64	d25, d10, d3
 1bc:	2e05e503 	cfsh32cs	mvfx14, mvfx5, #3
	Trice32m_0(tid);
 1c0:	7a9b0366 	bvc	fe6c0f60 <SomeExampleTrices+0xfe6c0f60>
 1c4:	05e5034a 	strbeq	r0, [r5, #842]!	@ 0x34a
 1c8:	829e2e2e 	addshi	r2, lr, #736	@ 0x2e0
 1cc:	4a7a9b03 	bmi	1ea6de0 <SomeExampleTrices+0x1ea6de0>
 1d0:	2e05e503 	cfsh32cs	mvfx14, mvfx5, #3
 1d4:	4a9e9e2e 	bmi	fe7a7a94 <SomeExampleTrices+0xfe7a7a94>
 1d8:	062e2e4a 	strteq	r2, [lr], -sl, asr #28
	Trice8B("msg:%02x \n", aString, strlen(aString));
 1dc:	a0030699 	mulge	r3, r9, r6
 1e0:	e0032e7a 	and	r2, r3, sl, ror lr
 1e4:	662e2e05 	strtvs	r2, [lr], -r5, lsl #28
	Trice32B("msg:%08x  \n", aString, strlen(aString) >> 2);
 1e8:	2e7aa003 	cdpcs	0, 7, cr10, cr10, cr3, {0}
 1ec:	2e05e003 	cdpcs	0, 0, cr14, cr5, cr3, {0}
 1f0:	a003662e 	andge	r6, r3, lr, lsr #12
	Trice16F("att:ARemoteFunctionName", aString, strlen(aString) >> 1);
 1f4:	e0032e7a 	and	r2, r3, sl, ror lr
 1f8:	062e2e05 	strteq	r2, [lr], -r5, lsl #28
 1fc:	03066b61 	movweq	r6, #27489	@ 0x6b61
	trice("info:%d times a 16 byte long Trice messages, which not all will be written because of the TRICE_PROTECT:\n", burstCount);
 200:	062e7aa0 	strteq	r7, [lr], -r0, lsr #21
 204:	2e05db03 	vmlacs.f64	d13, d5, d3
 208:	062e2e06 	strteq	r2, [lr], -r6, lsl #28
	for (int i = 0; i < burstCount; i++) {
 20c:	4a66064f 	bmi	1981b50 <SomeExampleTrices+0x1981b50>
 210:	2e062906 	vmlacs.f16	s4, s12, s12	@ <UNPREDICTABLE>
		Trice("i=%x %x\n", 0x44444400 + i, 0xaaaaaa00 + i);
 214:	01044a4a 	tsteq	r4, sl, asr #20
 218:	7acd0306 	bvc	ff340e38 <SomeExampleTrices+0xff340e38>
	for (int i = 0; i < burstCount; i++) {
 21c:	5803064a 	stmdapl	r3, {r1, r3, r6, r9, sl}
 220:	2903069e 	stmdbcs	r3, {r1, r2, r3, r4, r7, r9, sl}
}
 224:	0483bb2e 	streq	fp, [r3], #2862	@ 0xb2e
 228:	05b50305 	ldreq	r0, [r5, #773]!	@ 0x305
 22c:	a0030682 	andge	r0, r3, r2, lsl #13
 230:	e0034a7a 	and	r4, r3, sl, ror sl
 234:	04662e05 	strbteq	r2, [r6], #-3589	@ 0xfffff1fb
 238:	cd030601 	stcgt	6, cr0, [r3, #-4]
 23c:	bbd7d67a 	bllt	ff5f5c2c <SomeExampleTrices+0xff5f5c2c>
 240:	03069fbb 	movweq	r9, #28603	@ 0x6fbb
 244:	03054a4f 	movweq	r4, #23119	@ 0x5a4f
 248:	4a320306 	bmi	c80e68 <SomeExampleTrices+0xc80e68>
 24c:	059d1405 	ldreq	r1, [sp, #1029]	@ 0x405
 250:	05660602 	strbeq	r0, [r6, #-1538]!	@ 0xfffff9fe
 254:	310b0601 	tstcc	fp, r1, lsl #12
 258:	4a4c0306 	bmi	1300e78 <SomeExampleTrices+0x1300e78>
 25c:	01006802 	tsteq	r0, r2, lsl #16
 260:	02050001 	andeq	r0, r5, #1
 264:	00000000 	andeq	r0, r0, r0
 268:	05013603 	streq	r3, [r1, #-1539]	@ 0xfffff9fd
 26c:	06860a02 	streq	r0, [r6], r2, lsl #20
 270:	04f24503 	ldrbteq	r4, [r2], #1283	@ 0x503
 274:	db030605 	blle	c1a90 <SomeExampleTrices+0xc1a90>
 278:	82062e05 	andhi	r2, r6, #5, 28	@ 0x50
 27c:	03060104 	movweq	r0, #24836	@ 0x6104
 280:	06667aef 	strbteq	r7, [r6], -pc, ror #21
 284:	d67fb603 	ldrbtle	fp, [pc], -r3, lsl #12
 288:	00cb0306 	sbceq	r0, fp, r6, lsl #6
 28c:	0b010566 	bleq	4182c <SomeExampleTrices+0x4182c>
 290:	b4030667 	strlt	r0, [r3], #-1639	@ 0xfffff999
 294:	0c02667f 	stceq	6, cr6, [r2], {127}	@ 0x7f
void LogTriceConfiguration(void) {
 298:	Address 0x298 is out of bounds.

